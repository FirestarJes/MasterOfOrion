<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>DigitalRune.Game.UI</name>
  </assembly>
  <members>
    <member name="T:DigitalRune.Game.UI.FocusManager">
      <summary>
            Controls which UI control has the focus.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.FocusManager.#ctor(DigitalRune.Game.UI.Controls.UIScreen)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.FocusManager" /> class.
            </summary>
      <param name="screen">The screen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="screen" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.FocusManager.ClearFocus">
      <summary>
            Removes the focus from the current <see cref="P:DigitalRune.Game.UI.FocusManager.FocusedControl" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.FocusManager.Focus(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Moves focus to a control.
            </summary>
      <param name="control">
            The control that should get the focus. (If <paramref name="control" /> is <see langword="null" />,
            this method does nothing. Use <see cref="M:DigitalRune.Game.UI.FocusManager.ClearFocus" /> to remove the focus from a control.)
            </param>
      <returns>
        <see langword="true" /> if the focus was moved; otherwise <see langword="false" />.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.FocusManager.FocusedControl">
      <summary>
            Gets the control that currently has the focus.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.FocusManager.FocusScope">
      <summary>
            Gets the focus scope that currently contains the focused control.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.FocusManager.OnMoveFocus(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{DigitalRune.Game.UI.Controls.UIControl})">
      <summary>
            Called when the focus should be moved to another control.
            </summary>
      <param name="moveLeft">If set to <see langword="true" /> the focus should move left.</param>
      <param name="moveRight">If set to <see langword="true" /> the focus should move right.</param>
      <param name="moveUp">If set to <see langword="true" /> the focus should move up.</param>
      <param name="moveDown">If set to <see langword="true" /> the focus should move down.</param>
      <param name="focusableControls">The focusable controls of the current focus scopes.</param>
      <returns>The target control that should receive the focus.</returns>
    </member>
    <member name="P:DigitalRune.Game.UI.FocusManager.Screen">
      <summary>
            Gets the screen.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.HorizontalAlignment">
      <summary>
            Describes how a child element is horizontally positioned or stretched within a parent's layout
            slot. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.HorizontalAlignment.Left">
      <summary>
            The child element is aligned to the left of the parent's layout slot. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.HorizontalAlignment.Center">
      <summary>
            The child element is aligned to the center of the parent's layout slot.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.HorizontalAlignment.Right">
      <summary>
            The child element is aligned to the right of the parent's layout slot.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.HorizontalAlignment.Stretch">
      <summary>
            The child element stretches to fill the parent's layout slot. 
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.IUIService">
      <summary>
            Provides the ability to configure and control the graphical user interface.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.IUIService.Cursor">
      <summary>
            Gets or sets the mouse cursor, overriding the default mouse cursor.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.IUIService.GameForm">
      <summary>
            Gets the <strong>Form</strong> of the XNA <strong>Game</strong>.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.IUIService.InputService">
      <summary>
            Gets the input service.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.IUIService.KeyMap">
      <summary>
            Gets or sets the key map that translates <see cref="T:Microsoft.Xna.Framework.Input.Keys" /> to characters.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.IUIService.Screens">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />s.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.KeyMap">
      <summary>
            Maps XNA <see cref="T:Microsoft.Xna.Framework.Input.Keys" /> (key codes) to characters (keyboard layout).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.KeyMap.#ctor">
      <summary>
            Initializes a new empty instance of the <see cref="T:DigitalRune.Game.UI.KeyMap" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.KeyMap.#ctor(DigitalRune.Game.UI.KeyMap)">
      <summary>
            Initializes a instance of the <see cref="T:DigitalRune.Game.UI.KeyMap" /> class with the entries
            from another <see cref="T:DigitalRune.Game.UI.KeyMap" />.
            </summary>
      <param name="source">The source map that will be cloned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="source" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.KeyMap.AutoKeyMap">
      <summary>
            Gets the an automatic key mapping for the current culture.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.KeyMap.EnglishKeyMap">
      <summary>
            Gets the English key mapping.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.KeyMap.EnglishKeyMapGermanChatPad">
      <summary>
            Gets the English key mapping, but with a German key mapping for the ChatPad.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.KeyMap.GermanKeyMap">
      <summary>
            Gets the German key mapping.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.KeyMap.Item(Microsoft.Xna.Framework.Input.Keys,DigitalRune.Game.Input.ModifierKeys)">
      <summary>
            Gets or sets the <see cref="T:System.Char" /> with the specified key and modifiers.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.KeyMap.Load(System.Xml.Linq.XContainer)">
      <summary>
            Loads the key map entries.
            </summary>
      <param name="xDocument">The XML document containing the key map entries.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.KeyMap.Save">
      <summary>
            Saves the key map entries.
            </summary>
      <returns>
            An XML document with the serialized key map entries.
            </returns>
    </member>
    <member name="T:DigitalRune.Game.UI.LayoutSerializer">
      <summary>
            Loads/saves objects from/to a XML file. (Currently, only loading objects is implemented!)
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.LayoutSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.LayoutSerializer" /> class</summary>
    </member>
    <member name="P:DigitalRune.Game.UI.LayoutSerializer.Assemblies">
      <summary>
            Gets assemblies that contain the types.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.LayoutSerializer.DefaultNamespace">
      <summary>
            Gets or sets the default namespace specified in the "Layout" node of the XML file.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.LayoutSerializer.Load(System.Xml.Linq.XContainer)">
      <summary>
            Loads the objects specified in the given XML container.
            </summary>
      <param name="container">The container, usually a <see cref="T:System.Xml.Linq.XDocument" />.</param>
      <returns>The instances created from the XML definition.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            Error while loading the objects. See exception message.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.LayoutSerializer.OnCreateInstance(System.Type,System.Xml.Linq.XElement)">
      <summary>
            Called when a game instance needs to be created.
            </summary>
      <param name="type">The type of the object.</param>
      <param name="element">The XML node with data for the instance.</param>
      <returns>A new instance of the <paramref name="type" />.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.LayoutSerializer.OnGetType(System.Xml.Linq.XElement)">
      <summary>
            Called to find a type for the given XML element.
            </summary>
      <param name="element">The XML element.</param>
      <returns>The type for the given XML element.</returns>
    </member>
    <member name="T:DigitalRune.Game.UI.Orientation">
      <summary>
            Defines the different orientations that a control or layout can have. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Orientation.Vertical">
      <summary>
            Control or layout should be vertically oriented. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Orientation.Horizontal">
      <summary>
            Control or layout should be horizontally oriented
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.RectangleF">
      <summary>
            Represents a 2-dimensional rectangle (single precision).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.#ctor(Microsoft.Xna.Framework.Rectangle)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.RectangleF" /> struct from a 
            <see cref="T:Microsoft.Xna.Framework.Rectangle" />.
            </summary>
      <param name="rectangle">The rectangle.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.RectangleF" /> struct with the given values.
            </summary>
      <param name="x">The x-coordinate of the rectangle.</param>
      <param name="y">The y-coordinate of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.RectangleF.Bottom">
      <summary>
            Gets the y-coordinate of the bottom side of the rectangle.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.Contains(DigitalRune.Game.UI.RectangleF)">
      <summary>
            Determines whether rectangle contains the specified rectangle.
            </summary>
      <param name="rectangle">The rectangle.</param>
      <returns>
        <see langword="true" /> if this rectangle contains <paramref name="rectangle" />; otherwise, 
            <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.Contains(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Determines whether rectangle contains the specified point.
            </summary>
      <param name="point">The point.</param>
      <returns>
        <see langword="true" /> if the rectangle contains the point; otherwise, 
            <see langword="false" />.
            </returns>
    </member>
    <member name="F:DigitalRune.Game.UI.RectangleF.Empty">
      <summary>
            An empty rectangle (all values set to zero).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.Equals(DigitalRune.Game.UI.RectangleF)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the other parameter; otherwise, 
            <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.Equals(System.Object)">
      <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and
            represent the same value; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="F:DigitalRune.Game.UI.RectangleF.Height">
      <summary>
            The height of the rectangle.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.Intersect(DigitalRune.Game.UI.RectangleF,DigitalRune.Game.UI.RectangleF)">
      <summary>
            Creates a rectangle that contains the overlap between the given rectangles.
            </summary>
      <param name="rectangle1">The first rectangle.</param>
      <param name="rectangle2">The second rectangle.</param>
      <returns>
            The overlap between <paramref name="rectangle1" /> and <paramref name="rectangle2" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.Intersects(DigitalRune.Game.UI.RectangleF)">
      <summary>
            Determines whether this rectangle intersects with the specified rectangle.
            </summary>
      <param name="rectangle">The rectangle.</param>
      <returns>
        <see langword="true" /> if the rectangle intersect; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.RectangleF.Left">
      <summary>
            Gets the x-coordinate of the left side of the rectangle.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.RectangleF.Location">
      <summary>
            Gets or sets the position of the upper, left corner of the rectangle.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.op_Equality(DigitalRune.Game.UI.RectangleF,DigitalRune.Game.UI.RectangleF)">
      <summary>
            Compares two <see cref="T:DigitalRune.Game.UI.RectangleF" />s to determine whether they are the same.
            </summary>
      <param name="rectangle1">The first rectangle.</param>
      <param name="rectangle2">The second rectangle.</param>
      <returns>
        <see langword="true" /> if the rectangles are equal; otherwise <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.op_Inequality(DigitalRune.Game.UI.RectangleF,DigitalRune.Game.UI.RectangleF)">
      <summary>
            Compares two <see cref="T:DigitalRune.Game.UI.RectangleF" />s to determine whether they are the different.
            </summary>
      <param name="rectangle1">The first rectangle.</param>
      <param name="rectangle2">The second rectangle.</param>
      <returns>
        <see langword="true" /> if the rectangles are different; otherwise <see langword="false" />.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.RectangleF.Right">
      <summary>
            Gets the x-coordinate of the right side of the rectangle.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.RectangleF.Top">
      <summary>
            Gets the y-coordinate of the top side of the rectangle.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.ToRectangle(System.Boolean)">
      <summary>
            Converts the <see cref="T:DigitalRune.Game.UI.RectangleF" /> (floating-point, single precision) to a 
            <see cref="T:Microsoft.Xna.Framework.Rectangle" /> (integer precision).
            </summary>
      <param name="round">
            If set to <see langword="true" /> the values will be rounded; otherwise, the decimal part
            will be truncated.</param>
      <returns>A <see cref="T:Microsoft.Xna.Framework.Rectangle" />.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.ToString">
      <summary>
            Returns the string representation of this rectangle.
            </summary>
      <returns>The string representation of this rectangle.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.ToString(System.IFormatProvider)">
      <summary>
            Returns the string representation of this rectangle using the specified culture-specific
            format information.
            </summary>
      <param name="provider">
            An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information
            </param>
      <returns>The string representation of this rectangle.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.RectangleF.Union(DigitalRune.Game.UI.RectangleF,DigitalRune.Game.UI.RectangleF)">
      <summary>
            Creates the smallest rectangle that contains the given rectangles.
            </summary>
      <param name="rectangle1">The first rectangle.</param>
      <param name="rectangle2">The second rectangle.</param>
      <returns>
            The smallest rectangle that contains <paramref name="rectangle1" /> and 
            <paramref name="rectangle2" />.
            </returns>
    </member>
    <member name="F:DigitalRune.Game.UI.RectangleF.Width">
      <summary>
            The width of the rectangle.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.RectangleF.X">
      <summary>
            The x-coordinate of the rectangle. (Same as <see cref="P:DigitalRune.Game.UI.RectangleF.Left" />.)
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.RectangleF.Y">
      <summary>
            The y-coordinate of the rectangle. (Same as <see cref="P:DigitalRune.Game.UI.RectangleF.Top" />.)
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.ToolTipManager">
      <summary>
            Manages tool tips.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.ToolTipManager.CloseToolTip">
      <summary>
            Hides the tool tip or does nothing if no tool tip is visible.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.ToolTipManager.CreateToolTipContent">
      <summary>
            Gets or sets a callback that creates a <see cref="T:DigitalRune.Game.UI.Controls.UIControl" /> for a 
            <see cref="P:DigitalRune.Game.UI.Controls.UIControl.ToolTip" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.ToolTipManager.IsToolTipOpen">
      <summary>
            Gets a value indicating whether a tool tip is currently shown.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.ToolTipManager.Screen">
      <summary>
            Gets or sets the screen.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.ToolTipManager.ShowToolTip(System.Object,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Shows a tool tip.
            </summary>
      <param name="toolTip">The tool tip.</param>
      <param name="mousePosition">The mouse position.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.ToolTipManager.ToolTipControl">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Controls.ContentControl" /> that shows the tool tip.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.ToolTipManager.ToolTipDelay">
      <summary>
            Gets the time which the mouse has to stand still before a tool tip pops up.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.ToolTipManager.ToolTipOffset">
      <summary>
            Gets the offset of the tool tip to the mouse position.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.UIException">
      <summary>
            Occurs when an exception in the game UI occurs.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.UIException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.UIException" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.UIException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.UIException" /> class with serialized 
            data.
            </summary>
      <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the 
            exception being thrown.
            </param>
      <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or 
            destination.
            </param>
      <exception cref="T:System.ArgumentNullException">
            The <paramref name="info" /> parameter is <see langword="null" />.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.UIException" /> class with a specified 
            error message.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.UIException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.UIException" /> class with a specified 
            error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">
            The exception that is the cause of the current exception, or <see langword="null" /> if no 
            inner exception is specified.
            </param>
    </member>
    <member name="T:DigitalRune.Game.UI.UIHelper">
      <summary>
            Provides helper methods for working with <see cref="T:DigitalRune.Game.UI.Controls.UIControl" />s.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetAncestors(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Gets the ancestors of the control in the visual tree.
            </summary>
      <param name="control">The control where to start the search.</param>
      <returns>The ancestors of <paramref name="control" /> in the visual tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetDescendants(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Gets the descendants of the control in the visual tree using a depth-first search.
            </summary>
      <param name="control">The control where to start the search.</param>
      <returns>The descendants of <paramref name="control" /> in the visual tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetDescendants(DigitalRune.Game.UI.Controls.UIControl,System.Boolean)">
      <summary>
            Gets the descendants of the control in the visual tree using either a depth-first or a 
            breadth-first search.
            </summary>
      <param name="control">The control where to start the search.</param>
      <param name="depthFirst">
            If set to <see langword="true" /> then a depth-first search for descendants will be made; 
            otherwise a breadth-first search will be made.
            </param>
      <returns>The descendants of <paramref name="control" /> in the visual tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetLeaves(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Gets the leaves of the control in the visual tree.
            </summary>
      <param name="control">The control where to start the search.</param>
      <returns>
            The leaves of <paramref name="control" /> in the visual tree.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetRoot(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Returns the root control of the visual tree.
            </summary>
      <param name="control">The control where to start the search.</param>
      <returns>The root control.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetSelfAndAncestors(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Gets the control and its ancestors in the visual tree.
            </summary>
      <param name="control">The control where to start the search.</param>
      <returns>The <paramref name="control" /> and its ancestors in the visual tree.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetSubtree(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Gets the subtree (the given control and all of its descendants in the visual tree) using a 
            depth-first search.
            </summary>
      <param name="control">The control where to start the search.</param>
      <returns>
            The <paramref name="control" /> and all of its descendants in the visual tree.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIHelper.GetSubtree(DigitalRune.Game.UI.Controls.UIControl,System.Boolean)">
      <summary>
            Gets the subtree (the given control and all of its descendants in the visual tree) using 
            either a depth-first or a breadth-first search.
            </summary>
      <param name="control">The control where to start the search.</param>
      <param name="depthFirst">
            If set to <see langword="true" /> then a depth-first search for descendants will be made; 
            otherwise a breadth-first search will be made.
            </param>
      <returns>
            The <paramref name="control" /> and all of its descendants in the visual tree.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:DigitalRune.Game.UI.UIManager">
      <summary>
            Manages the game user interface.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.UIManager.#ctor(Microsoft.Xna.Framework.Game,DigitalRune.Game.Input.IInputService)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.UIManager" /> class.
            </summary>
      <param name="game">The XNA game instance.</param>
      <param name="inputService">The input service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="game" /> or <paramref name="inputService" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.UIManager.Cursor">
      <summary>
            Gets or sets the mouse cursor, overriding the default mouse cursor.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.UIManager.GameForm">
      <summary>
            Gets the <strong>Form</strong> of the XNA <strong>Game</strong>.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.UIManager.InputService">
      <summary>
            Gets the input service.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.UIManager.KeyMap">
      <summary>
            Gets or sets the key map that translates <see cref="T:Microsoft.Xna.Framework.Input.Keys" /> to characters.
            </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.UIManager.Screens">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />s.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.UIManager.Update(System.TimeSpan)">
      <summary>
            Updates the UI.
            </summary>
      <param name="deltaTime">The size of the current time step.</param>
    </member>
    <member name="T:DigitalRune.Game.UI.UIScreenCollection">
      <summary>
            Represents a collection of <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.UIScreenCollection.ClearItems">
      <summary>
            Removes all elements from the <see cref="T:DigitalRune.Game.UI.UIScreenCollection" />. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.UIScreenCollection.InsertItem(System.Int32,DigitalRune.Game.UI.Controls.UIScreen)">
      <summary>
            Inserts an element into the <see cref="T:DigitalRune.Game.UI.UIScreenCollection" /> at the specified index.
            </summary>
      <param name="index">The zero-based index at which item should be inserted.</param>
      <param name="item">The object to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0, or <paramref name="index" /> is greater than 
            <see cref="P:System.Collections.ObjectModel.Collection`1.Count" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            Cannot add item to <see cref="T:DigitalRune.Game.UI.UIScreenCollection" />. The item is already part of a 
            different <see cref="T:DigitalRune.Game.UI.UIScreenCollection" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.UIScreenCollection.MoveItem(System.Int32,System.Int32)">
      <summary>
            Moves the item at the specified index to a new location in the collection.
            </summary>
      <param name="oldIndex">
            The zero-based index specifying the location of the item to be moved. 
            </param>
      <param name="newIndex">
            The zero-based index specifying the new location of the item.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.UIScreenCollection.RemoveItem(System.Int32)">
      <summary>
            Removes the element at the specified index of the <see cref="T:DigitalRune.Game.UI.UIScreenCollection" />.
            </summary>
      <param name="index">The index of the element to remove.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.UIScreenCollection.SetItem(System.Int32,DigitalRune.Game.UI.Controls.UIScreen)">
      <summary>
            Replaces the item at the specified index with the specified item.
            </summary>
      <param name="index">The zero-based index of the item to be replaced.</param>
      <param name="item">The new item.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            Cannot add item to <see cref="T:DigitalRune.Game.UI.UIScreenCollection" />. The item is already part of a different 
            <see cref="T:DigitalRune.Game.UI.UIScreenCollection" />.
            </exception>
    </member>
    <member name="T:DigitalRune.Game.UI.VerticalAlignment">
      <summary>
            Describes how a child element is vertically positioned or stretched within a parent's layout
            slot. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.VerticalAlignment.Top">
      <summary>
            The child element is aligned to the top of the parent's layout slot.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.VerticalAlignment.Center">
      <summary>
            The child element is aligned to the center of the parent's layout slot.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.VerticalAlignment.Bottom">
      <summary>
            The child element is aligned to the bottom of the parent's layout slot.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.VerticalAlignment.Stretch">
      <summary>
            The child element stretches to fill the parent's layout slot. 
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Consoles.ConsoleCommand">
      <summary>
            Defines a game console command.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommand.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommand" /> class.
            </summary>
      <param name="name">The name (see <see cref="P:DigitalRune.Game.UI.Consoles.ConsoleCommand.Name" />).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommand.#ctor(System.String,System.String,System.Action{System.String[]})">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommand" /> class with the given 
            properties.
            </summary>
      <param name="name">The name.</param>
      <param name="description">The description.</param>
      <param name="callback">
            The callback method that handles the command (see <see cref="P:DigitalRune.Game.UI.Consoles.ConsoleCommand.Execute" />).
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="callback" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.ConsoleCommand.Description">
      <summary>
            Gets or sets the description.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.ConsoleCommand.Execute">
      <summary>
            Gets or sets the callback that is called when the command was entered.
            </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.ConsoleCommand.Name">
      <summary>
            Gets the name of the command.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs">
      <summary>
            Provides arguments for a <see cref="E:DigitalRune.Game.UI.Consoles.IConsole.CommandEntered" /> event.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs.#ctor(System.String[])">
      <summary>
            Constructs a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs" /> class.
            </summary>
      <param name="args">The command arguments.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="args" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs.Args">
      <summary>
            Gets the command arguments.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs.Handled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs" /> was
            handled.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Consoles.ConsoleCommandException">
      <summary>
            Is raised when a console command needs to report errors.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandException" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandException" /> class with 
            serialized data.
            </summary>
      <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the 
            exception being thrown.
            </param>
      <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or 
            destination.
            </param>
      <exception cref="T:System.ArgumentNullException">
            The <paramref name="info" /> parameter is <see langword="null" />.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandException" /> class with a 
            specified error message.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandException" /> class with a 
            specified error message and a reference to the inner exception that is the cause of this 
            exception.
            </summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">
            The exception that is the cause of the current exception, or <see langword="null" /> if no 
            inner exception is specified.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandException.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandException" /> class with a 
            specified error message and the argument that caused the error.
            </summary>
      <param name="message">The message that describes the error.</param>
      <param name="argument">The argument that caused the error.</param>
    </member>
    <member name="F:DigitalRune.Game.UI.Consoles.ConsoleCommandException.ErrorInvalidArgument">
      <summary>The default error message for an invalid argument.</summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Consoles.ConsoleCommandException.ErrorInvalidCommand">
      <summary>The default error message for an invalid command.</summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Consoles.ConsoleCommandException.ErrorInvalidNumberOfArguments">
      <summary>The default error message for an invalid number of arguments.</summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Consoles.ConsoleCommandException.ErrorMissingArgument">
      <summary>The default error message for a missing argument.</summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Consoles.ConsoleCommandInterpreter">
      <summary>
            Handles game console commands.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandInterpreter.#ctor(DigitalRune.Game.UI.Consoles.IConsole)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandInterpreter" /> class.
            </summary>
      <param name="console">The <see cref="T:DigitalRune.Game.UI.Consoles.IConsole" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="console" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.ConsoleCommandInterpreter.Commands">
      <summary>
            Gets the commands.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.ConsoleCommandInterpreter.Console">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Consoles.IConsole" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.ConsoleCommandInterpreter.Interpret(DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs)">
      <summary>
            Handles the specified command. 
            </summary>
      <param name="eventArgs">
            The <see cref="T:DigitalRune.Game.UI.Consoles.ConsoleCommandEventArgs" /> instance containing the event data.
            </param>
    </member>
    <member name="T:DigitalRune.Game.UI.Consoles.IConsole">
      <summary>
            Represents an interactive console for debugging.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.IConsole.Clear">
      <summary>
            Clears the console.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Consoles.IConsole.CommandEntered">
      <summary>
            Event raised after a command was entered.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.IConsole.Interpreter">
      <summary>
            Gets the default command interpreter.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Consoles.IConsole.Prompt">
      <summary>
            Gets or sets the prompt text.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.IConsole.WriteLine">
      <summary>
            Writes an empty line in the console.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Consoles.IConsole.WriteLine(System.String)">
      <summary>
            Writes a line of text in the console.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Button">
      <summary>
            Represents a button control. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Button.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Button" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Button.IsCancel">
      <summary>
            Gets or sets a value that indicates whether a <see cref="T:DigitalRune.Game.UI.Controls.Button" /> is a Cancel button.  
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Button.IsCancelPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Button.IsCancel" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Button.IsDefault">
      <summary>
            Gets or sets a value that indicates whether a <see cref="T:DigitalRune.Game.UI.Controls.Button" /> is the default button. 
            This is a game object property. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Button.IsDefaultPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Button.IsDefault" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Button.IsRepeatButton">
      <summary>
            Gets or sets a value indicating whether this instance is repeat button. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Button.IsRepeatButtonPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Button.IsRepeatButton" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Button.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ButtonBase">
      <summary>
            Implements the basic functionality common to button controls.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ButtonBase.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.ButtonBase" /> class.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.ButtonBase.Click">
      <summary>
            Occurs when the button is clicked (<see cref="P:DigitalRune.Game.UI.Controls.ButtonBase.IsClicked" /> changed to 
            <see langword="true" />). This is a game object event.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ButtonBase.ClickEventId">
      <summary> 
            The ID of the <see cref="E:DigitalRune.Game.UI.Controls.ButtonBase.Click" /> game object event.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ButtonBase.ClickMode">
      <summary>
            Gets or sets the <see cref="T:DigitalRune.Game.UI.Controls.ClickMode" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ButtonBase.ClickModePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ButtonBase.ClickMode" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ButtonBase.IsClicked">
      <summary>
            Gets (or sets) a value indicating whether this button was clicked in this frame. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ButtonBase.IsClickedPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ButtonBase.IsClicked" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ButtonBase.IsDown">
      <summary>
            Gets a value indicating whether this button is currently pressed down. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ButtonBase.IsDownPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ButtonBase.IsDown" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ButtonBase.OnClick(System.EventArgs)">
      <summary>
            Raises the <see cref="E:DigitalRune.Game.UI.Controls.ButtonBase.Click" /> event.
            </summary>
      <param name="eventArgs">
        <see cref="T:System.EventArgs" /> object that provides the arguments for the event.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ButtonBase.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ButtonBase.VisualState">
      <summary>
            Gets the visual state of the control as string.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Canvas">
      <summary>
            Defines an area within which you can explicitly position child elements by using coordinates 
            that are relative to the <see cref="T:DigitalRune.Game.UI.Controls.Canvas" /> area.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Canvas.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Canvas" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Canvas.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.CheckBox">
      <summary>
            Represents a check box.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.CheckBox.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.CheckBox" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.CheckBox.OnToggle">
      <summary>
            Called when the toggle button is clicked.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ClickMode">
      <summary>
            Specifies when the <see cref="E:DigitalRune.Game.UI.Controls.ButtonBase.Click" /> event should be raised for a control. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ClickMode.Release">
      <summary>
            Specifies that the <see cref="E:DigitalRune.Game.UI.Controls.ButtonBase.Click" /> event should be raised when the button is
            pressed and released and the control is focused.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ClickMode.Press">
      <summary>
            Specifies that the <see cref="E:DigitalRune.Game.UI.Controls.ButtonBase.Click" /> event should be raised when the button is
            pressed the control is focused.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Console">
      <summary>
            Provides an interactive console for debugging.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Console" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.Clear">
      <summary>
            Clears the console.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.Console.CommandEntered">
      <summary>
            Event raised after a command was entered.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.Interpreter">
      <summary>
            Gets the default command interpreter.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.LineOffset">
      <summary>
            Gets or sets the line offset for scrolling. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Console.LineOffsetPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Console.LineOffset" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.MaxHistoryEntries">
      <summary>
            Gets or sets the max number of entries in the command history.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.MaxLines">
      <summary>
            Gets or sets the max number of text lines. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Console.MaxLinesPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Console.MaxLines" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.OnRender(DigitalRune.Game.UI.Controls.UIRenderContext)">
      <summary>
            Called when the control and its visual children should be rendered.
            </summary>
      <param name="context">The render context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.Prompt">
      <summary>
            Gets or sets the prompt text.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.TextLines">
      <summary>
            Gets the text content of the console line by line.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.VerticalScrollBarStyle">
      <summary>
            Gets or sets the style that is applied to the vertical scroll bar. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Console.VerticalScrollBarStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Console.VerticalScrollBarStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.VisualCaretX">
      <summary>
            Gets the x-position of the caret (in columns).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.VisualCaretY">
      <summary>
            Gets the y-position of the caret (in rows).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Console.VisualLines">
      <summary>
            Gets the text lines, exactly as they should be displayed (wrapping already applied).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.WriteLine">
      <summary>
            Writes an empty line in the console.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Console.WriteLine(System.String)">
      <summary>
            Writes a line of text in the console.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ContentControl">
      <summary>
            Represents a control with another <see cref="T:DigitalRune.Game.UI.Controls.UIControl" /> as content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContentControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.ContentControl" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContentControl.ClipContent">
      <summary>
            Gets or sets a value indicating whether the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" /> is clipped to the
            <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.ContentBounds" /> or whether the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" /> can draw outside the
            <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.ContentBounds" />. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ContentControl.ClipContentPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.ClipContent" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContentControl.Content">
      <summary>
            Gets or sets the content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContentControl.ContentBounds">
      <summary>
            Gets the content bounds that define where the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" /> is drawn.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContentControl.ContentStyle">
      <summary>
            Gets or sets the style that is applied to the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ContentControl.ContentStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.ContentStyle" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContentControl.HitTest(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Tests if a position is over a control.
            </summary>
      <param name="control">
            The control. If <see langword="null" />, the position is checked against this control.
            </param>
      <param name="position">The position.</param>
      <returns>
        <see langword="true" /> if a mouse click at the <paramref name="position" /> can hit
            <paramref name="control" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContentControl.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContentControl.OnContentChanged(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Called when the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" /> was exchanged.
            </summary>
      <param name="newContent">The new content.</param>
      <param name="oldContent">The old content.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContentControl.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContentControl.OnTemplateChanged(System.EventArgs)">
      <summary>
            Raises the <see cref="E:DigitalRune.Game.GameObject.TemplateChanged" /> event.
            </summary>
      <param name="eventArgs">
        <see cref="T:System.EventArgs" /> object that provides the arguments for the event.
            </param>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ContextMenu">
      <summary>
            Represents a popup menu that enables a control to expose functionality that is specific to 
            the context of the control. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContextMenu.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.ContextMenu" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContextMenu.Close">
      <summary>
            Closes this <see cref="T:DigitalRune.Game.UI.Controls.ContextMenu" /> (removes it from the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContextMenu.IsOpen">
      <summary>
            Gets or sets a value indicating whether this context menu is currently is visible. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ContextMenu.IsOpenPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ContextMenu.IsOpen" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContextMenu.Items">
      <summary>
            Gets the menu items.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContextMenu.Offset">
      <summary>
            Gets or sets the offset relative to the opening position. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ContextMenu.OffsetPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ContextMenu.Offset" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContextMenu.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContextMenu.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ContextMenu.Open(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Opens this <see cref="T:DigitalRune.Game.UI.Controls.ContextMenu" /> (adds it to the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />).
            </summary>
      <param name="owner">The control that opened this context menu.</param>
      <param name="position">
            The position of the mouse cursor - or where the context menu should be opened.
            (<see cref="P:DigitalRune.Game.UI.Controls.ContextMenu.Offset" /> will be applied to this position.)
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="owner" /> is not loaded. The owner needs to be a visible control.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ContextMenu.Owner">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Controls.UIControl" /> that opened this <see cref="T:DigitalRune.Game.UI.Controls.ContextMenu" />.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.DropDown">
      <summary>
            Represents a popup that displays the <see cref="T:DigitalRune.Game.UI.Controls.DropDownItem" />s of a 
            <see cref="T:DigitalRune.Game.UI.Controls.DropDownButton" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDown.#ctor(DigitalRune.Game.UI.Controls.DropDownButton)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.DropDown" /> class.
            </summary>
      <param name="owner">The owner.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDown.Close">
      <summary>
            Closes this <see cref="T:DigitalRune.Game.UI.Controls.DropDown" /> (removes it from the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDown.DropDownItemStyle">
      <summary>
            Gets or sets the style that is applied to <see cref="T:DigitalRune.Game.UI.Controls.DropDownItem" />s. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.DropDown.DropDownItemStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.DropDown.DropDownItemStyle" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDown.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDown.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDown.Open">
      <summary>
            Opens this <see cref="T:DigitalRune.Game.UI.Controls.DropDown" /> (adds it to the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />).
            </summary>
      <exception cref="T:DigitalRune.Game.UI.UIException">
        <see cref="P:DigitalRune.Game.UI.Controls.DropDown.Owner" /> is not loaded. The owner must be loaded before the 
            <see cref="T:DigitalRune.Game.UI.Controls.DropDown" /> can be shown.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDown.Owner">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Controls.DropDownButton" /> that owns this <see cref="T:DigitalRune.Game.UI.Controls.DropDown" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDown.TitleTextBlockStyle">
      <summary>
            Gets or sets the style that is applied to the <see cref="P:DigitalRune.Game.UI.Controls.DropDownButton.Title" />
            (only on Windows Phone 7). This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.DropDown.TitleTextBlockStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.DropDown.TitleTextBlockStyle" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.DropDownButton">
      <summary>
            Represents a drop down button. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDownButton.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.DropDownButton" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDownButton.CreateControlForItem">
      <summary>
            Gets or sets the method that creates <see cref="T:DigitalRune.Game.UI.Controls.UIControl" />s for the <see cref="P:DigitalRune.Game.UI.Controls.DropDownButton.Items" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDownButton.DropDownStyle">
      <summary>
            Gets or sets the style that is applied to the <see cref="T:DigitalRune.Game.UI.Controls.DropDown" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.DropDownButton.DropDownStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.DropDownButton.DropDownStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDownButton.Items">
      <summary>
            Gets the items.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDownButton.MaxDropDownHeight">
      <summary>
            Gets or sets the maximal height of the <see cref="T:DigitalRune.Game.UI.Controls.DropDown" /> in pixels. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.DropDownButton.MaxDropDownHeightPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.DropDownButton.MaxDropDownHeight" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDownButton.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDownButton.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDownButton.OnUpdate(System.TimeSpan)">
      <summary>
            Called when the game object should be updated.
            </summary>
      <param name="deltaTime">The elapsed time since the last frame.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDownButton.SelectedIndex">
      <summary>
            Gets or sets the index of the selected item. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.DropDownButton.SelectedIndexPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.DropDownButton.SelectedIndex" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.DropDownButton.Title">
      <summary>
            Gets or sets the title that is displayed in the <see cref="T:DigitalRune.Game.UI.Controls.DropDown" /> (only on Windows 
            Phone 7). This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.DropDownButton.TitlePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.DropDownButton.Title" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.DropDownItem">
      <summary>
            Represents an item of <see cref="T:DigitalRune.Game.UI.Controls.DropDownButton" /> control.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.DropDownItem.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.DropDownItem" /> class.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.GroupBox">
      <summary>
            Represents a control that creates a container that has a border and a header for other user 
            interface (UI) content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.GroupBox.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.GroupBox" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.GroupBox.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.GroupBox.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.GroupBox.Title">
      <summary>
            Gets or sets the title. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.GroupBox.TitlePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.GroupBox.Title" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.GroupBox.TitleTextBlockStyle">
      <summary>
            Gets or sets the style that is applied to the <see cref="P:DigitalRune.Game.UI.Controls.GroupBox.Title" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.GroupBox.TitleTextBlockStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.GroupBox.TitleTextBlockStyle" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Image">
      <summary>
            Represents a control that displays an image.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Image.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Image" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Image.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Image.SourceRectangle">
      <summary>
            Gets or sets the source rectangle that defines the region of the <see cref="P:DigitalRune.Game.UI.Controls.Image.Texture" />
            that should be displayed. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Image.SourceRectanglePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Image.SourceRectangle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Image.Texture">
      <summary>
            Gets or sets the texture with the image that should be displayed. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Image.TexturePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Image.Texture" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.InputContext">
      <summary>
            Provides information during processing of device input.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.InputContext.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.InputContext" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.AllowedPlayer">
      <summary>
            Gets or sets the <see cref="T:DigitalRune.Game.Input.LogicalPlayerIndex" /> of the player from which input is 
            accepted.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.Data">
      <summary>
            Gets a generic collection of name/value pairs which can be used to store custom data.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.DeltaTime">
      <summary>
            Gets or sets the size of the current time step.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.IsMouseOver">
      <summary>
            Gets or sets a value indicating whether the mouse is over the current control.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.MousePosition">
      <summary>
            Gets or sets the mouse position in local coordinates (after the 
            <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransform" /> was undone).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.MousePositionDelta">
      <summary>
            Gets or sets the mouse position change since the last frame in local coordinates (after the 
            <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransform" /> was undone).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.ScreenMousePosition">
      <summary>
            Gets or sets the absolute mouse position in screen coordinates.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputContext.ScreenMousePositionDelta">
      <summary>
            Gets or sets the mouse position change since the last frame in screen coordinates.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.InputEventArgs">
      <summary>
            Provides arguments for <see cref="E:DigitalRune.Game.UI.Controls.UIControl.InputProcessing" /> and
            <see cref="E:DigitalRune.Game.UI.Controls.UIControl.InputProcessed" /> events.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.InputEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.InputEventArgs" /> class</summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.InputEventArgs.Context">
      <summary>
            Gets or sets the input context.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.MenuItem">
      <summary>
            Represents an item of a menu (e.g. a <see cref="T:DigitalRune.Game.UI.Controls.ContextMenu" />).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.MenuItem.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.MenuItem" /> class.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Panel">
      <summary>
            Provides a base class for all <see cref="T:DigitalRune.Game.UI.Controls.Panel" /> controls. Use panels to position and 
            arrange child controls.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Panel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Panel" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Panel.Children">
      <summary>
            Gets the children.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ProgressBar">
      <summary>
            Indicates the progress of an operation. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ProgressBar.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.ProgressBar" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ProgressBar.IndeterminateCycleTime">
      <summary>
            Gets or sets a value indicating how long an animation cycle in <see cref="P:DigitalRune.Game.UI.Controls.ProgressBar.IsIndeterminate" /> 
            mode takes. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ProgressBar.IndeterminateCycleTimePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ProgressBar.IsIndeterminate" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ProgressBar.IsIndeterminate">
      <summary>
            Gets or sets a value that indicates whether the progress bar reports generic progress with
            a repeating pattern or reports progress based on the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> property. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ProgressBar.IsIndeterminatePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ProgressBar.IsIndeterminate" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ProgressBar.OnUpdate(System.TimeSpan)">
      <summary>
            Called when the game object should be updated.
            </summary>
      <param name="deltaTime">The elapsed time since the last frame.</param>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.RadioButton">
      <summary>
            Enables the user to select a single option from a of choices when paired with other 
            <see cref="T:DigitalRune.Game.UI.Controls.RadioButton" /> controls. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.RadioButton.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.RadioButton" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.RadioButton.GroupName">
      <summary>
            Gets or sets the name of the group.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.RadioButton.OnToggle">
      <summary>
            Called when the toggle button is clicked.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.RangeBase">
      <summary>
            Represents an element that has a value within a specific range, such as the 
            <see cref="T:DigitalRune.Game.UI.Controls.ProgressBar" />, <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />, and <see cref="T:DigitalRune.Game.UI.Controls.Slider" /> controls. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.RangeBase.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.RangeBase" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.RangeBase.LargeChange">
      <summary>
            Gets or sets a value to be added to or subtracted from the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> of a 
            <see cref="T:DigitalRune.Game.UI.Controls.RangeBase" /> control. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.RangeBase.LargeChangePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.LargeChange" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.RangeBase.Maximum">
      <summary>
            Gets or sets the maximum possible <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> of the range element. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.RangeBase.MaximumPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Maximum" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.RangeBase.Minimum">
      <summary>
            Gets or sets the minimum possible <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> of the range element. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.RangeBase.MinimumPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Minimum" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.RangeBase.SmallChange">
      <summary>
            Gets or sets a value to be added to or subtracted from the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> of a 
            <see cref="T:DigitalRune.Game.UI.Controls.RangeBase" /> control. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.RangeBase.SmallChangePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.SmallChange" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.RangeBase.Value">
      <summary>
            Gets or sets the current value of the range element. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.RangeBase.ValuePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ScrollBar">
      <summary>
            Represents a control that provides a scroll bar that has a sliding <see cref="T:DigitalRune.Game.UI.Controls.Thumb" /> whose
            position corresponds to a value and buttons to change the value.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollBar.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollBar.DecrementButtonStyle">
      <summary>
            Gets or sets the style that is applied to the button that decreases the 
            <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" />. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBar.DecrementButtonStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollBar.DecrementButtonStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollBar.IncrementButtonStyle">
      <summary>
            Gets or sets the style that is applied to the button that increments the 
            <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" />. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBar.IncrementButtonStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollBar.IncrementButtonStyle" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollBar.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollBar.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollBar.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollBar.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollBar.Orientation">
      <summary>
            Gets or sets the orientation of the scroll bar. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBar.OrientationPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollBar.Orientation" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollBar.ThumbStyle">
      <summary>
            Gets or sets the style that is applied to the <see cref="T:DigitalRune.Game.UI.Controls.Thumb" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBar.ThumbStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollBar.ThumbStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollBar.ViewportSize">
      <summary>
            Gets or sets the size of the viewport relative to the full extent of the scrollable content. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBar.ViewportSizePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollBar.ViewportSize" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ScrollBarVisibility">
      <summary>
            Specifies the visibility of a <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" /> for scrollable content. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBarVisibility.Disabled">
      <summary>
            A scroll bar does not appear even when the <see cref="T:DigitalRune.Game.UI.Controls.ScrollViewer" /> cannot display all of
            the content. The content size is restricted by the size of the <see cref="T:DigitalRune.Game.UI.Controls.ScrollViewer" />.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBarVisibility.Auto">
      <summary>
            A scroll bar appears when the <see cref="T:DigitalRune.Game.UI.Controls.ScrollViewer" /> cannot display all of the content. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBarVisibility.Hidden">
      <summary>
            A scroll bar does not appear even when the <see cref="T:DigitalRune.Game.UI.Controls.ScrollViewer" /> cannot display all of 
            the content. The content size is not limited by the size of the <see cref="T:DigitalRune.Game.UI.Controls.ScrollViewer" />.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollBarVisibility.Visible">
      <summary>
            A scroll bar always appears. 
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ScrollViewer">
      <summary>
            Represents a scrollable area that can contain other visible controls. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollViewer.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.ScrollViewer" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.ContentBounds">
      <summary>
            Gets the content bounds that define where the <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" /> is drawn.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.ExtentHeight">
      <summary>
            Gets the extent height which is equal to the desired height of the 
            <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.ExtentWidth">
      <summary>
            Gets the extent width which is equal to the desired width of the 
            <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.FlickScrollVelocityFactor">
      <summary>
            Windows Phone 7 only: Gets or sets the factor that defines the scroll velocity after a 
            flick gesture.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalOffset">
      <summary>
            Gets or sets the horizontal offset (= the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> of the 
            horizontal <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />). This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalOffsetPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalOffset" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalScrollBarStyle">
      <summary>
            Gets or sets the style that is applied to the horizontal <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalScrollBarStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalScrollBarStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalScrollBarVisibility">
      <summary>
            Gets or sets the <see cref="T:DigitalRune.Game.UI.Controls.ScrollBarVisibility" /> of the horizontal 
            <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalScrollBarVisibilityPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollViewer.HorizontalScrollBarVisibility" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.MaxScrollVelocity">
      <summary>
            Windows Phone 7 only: Gets or sets the maximal allowed scroll velocity. (Higher scrolling
            velocities are clamped to this value.)
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.MinScrollVelocity">
      <summary>
            Windows Phone 7 only: Gets or sets the minimal scroll velocity that determines when 
            scrolling is stopped.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollViewer.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollViewer.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollViewer.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollViewer.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollViewer.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ScrollViewer.OnUpdate(System.TimeSpan)">
      <summary>
            Called when the game object should be updated.
            </summary>
      <param name="deltaTime">The elapsed time since the last frame.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.ScrollDamping">
      <summary>
            Windows Phone 7 only: Gets or sets the damping factor with which the scrolling is damped.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.ScrollThreshold">
      <summary>
            Gets or sets the vertical scroll threshold that the finger movement has to exceed 
            to start a scroll action.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.SpringConstant">
      <summary>
            Windows Phone 7 only: Gets or sets the spring constant which is applied when the user drags
            the content beyond the limit.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.SpringDamping">
      <summary>
            Windows Phone 7 only: Gets or sets the damping which is applied when the user drags the 
            content beyond the limit.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.SpringLength">
      <summary>
            Windows Phone 7 only: Gets or sets the max spring length which defines how far the user can
            drag the content beyond the limit.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalOffset">
      <summary>
            Gets or sets the vertical offset (= the <see cref="P:DigitalRune.Game.UI.Controls.RangeBase.Value" /> of the vertical 
            <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />). This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalOffsetPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalOffset" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalScrollBarStyle">
      <summary>
            Gets or sets the style that is applied to the vertical <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalScrollBarStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalScrollBarStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalScrollBarVisibility">
      <summary>
            Gets or sets the <see cref="T:DigitalRune.Game.UI.Controls.ScrollBarVisibility" /> of the vertical <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalScrollBarVisibilityPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ScrollViewer.VerticalScrollBarVisibility" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.ViewportHeight">
      <summary>
            Gets the height of the viewport which defines the visual part of the 
            <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ScrollViewer.ViewportWidth">
      <summary>
            Gets the width of the viewport which defines the visual part of the 
            <see cref="P:DigitalRune.Game.UI.Controls.ContentControl.Content" />.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Slider">
      <summary>
            Represents a control that lets the user select from a range of values by moving a 
            <see cref="T:DigitalRune.Game.UI.Controls.Thumb" /> control. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Slider.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Slider" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Slider.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Slider.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Slider.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Slider.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Slider.ThumbStyle">
      <summary>
            Gets or sets the style that is applied to the thumb control. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Slider.ThumbStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Slider.ThumbStyle" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.StackPanel">
      <summary>
            Arranges child elements into a single line that can be oriented horizontally or vertically. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.StackPanel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.StackPanel" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.StackPanel.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.StackPanel.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.StackPanel.Orientation">
      <summary>
            Gets or sets the orientation of the stack panel. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.StackPanel.OrientationPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.StackPanel.Orientation" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.TabControl">
      <summary>
            Represents a control that contains multiple items that share the same space on the screen. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.TabControl" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TabControl.Items">
      <summary>
            Gets the items.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabControl.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabControl.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabControl.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabControl.Select(DigitalRune.Game.UI.Controls.TabItem)">
      <summary>
            Selects the specified <see cref="T:DigitalRune.Game.UI.Controls.TabItem" />.
            </summary>
      <param name="tabItem">
            The <see cref="T:DigitalRune.Game.UI.Controls.TabItem" /> (must be one of the <see cref="P:DigitalRune.Game.UI.Controls.TabControl.Items" />).
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tabItem" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="tabItem" /> is not an item of this <see cref="T:DigitalRune.Game.UI.Controls.TabControl" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabControl.Select(System.Int32)">
      <summary>
            Selects a <see cref="T:DigitalRune.Game.UI.Controls.TabItem" /> by index.
            </summary>
      <param name="index">The index of the item in the <see cref="P:DigitalRune.Game.UI.Controls.TabControl.Items" /> collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is out of range.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TabControl.SelectedIndex">
      <summary>
            Gets or sets the index of the selected item. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TabControl.SelectedIndexPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TabControl.SelectedIndex" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TabControl.TabItemPanelStyle">
      <summary>
            Gets or sets the style that is used for the panel that displays the selected item. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TabControl.TabItemPanelStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TabControl.TabItemPanelStyle" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.TabItem">
      <summary>
            Represents a selectable item inside a <see cref="P:DigitalRune.Game.UI.Controls.TabItem.TabControl" />. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabItem.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.TabItem" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TabItem.IsSelected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:DigitalRune.Game.UI.Controls.TabItem" /> is selected in the
            <see cref="P:DigitalRune.Game.UI.Controls.TabItem.TabControl" />. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TabItem.IsSelectedPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TabItem.IsSelected" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TabItem.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TabItem.TabControl">
      <summary>
            Gets the <see cref="P:DigitalRune.Game.UI.Controls.TabItem.TabControl" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TabItem.TabPage">
      <summary>
            Gets or sets the control that should be displayed as <see cref="P:DigitalRune.Game.UI.Controls.TabItem.TabControl" /> content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TabItem.VisualState">
      <summary>
            Gets the visual state of the control as string.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.TextBlock">
      <summary>
            Provides a lightweight control for displaying small amounts of text, supporting text 
            wrapping at word boundaries.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.TextBlock" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBlock.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBlock.Text">
      <summary>
            Gets or sets the text. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBlock.TextPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBlock.Text" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBlock.UseEllipsis">
      <summary>
            Gets or sets a value indicating whether an ellipsis ("…") should be appended when the text
            must be clipped. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBlock.UseEllipsisPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBlock.UseEllipsis" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBlock.VisualClip">
      <summary>
            Gets a value indicating whether the renderer should clip the rendered 
            <see cref="P:DigitalRune.Game.UI.Controls.TextBlock.VisualText" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBlock.VisualText">
      <summary>
            Gets the text exactly as it should be displayed (wrapping already applied).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBlock.WrapText">
      <summary>
            Gets or sets a value indicating whether text is wrapped when the available space is not
            wide enough. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBlock.WrapTextPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBlock.WrapText" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.TextBox">
      <summary>
            Represents a control that can be used to display or edit unformatted text.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.TextBox" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.ClearSelection">
      <summary>
            Clears the text selection.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.Copy">
      <summary>
            Copies the current selection from the text box to the clipboard.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.Cut">
      <summary>
            Removes the current selection from the text box and copies it to the clipboard.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.GuideDescription">
      <summary>
            Gets or sets the description that is displayed with the software keyboard.
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.GuideDescriptionPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.GuideDescription" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.GuideTitle">
      <summary>
            Gets or sets the title that is displayed with the software keyboard.
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.GuideTitlePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.GuideTitle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.IsMultiline">
      <summary>
            Gets a value indicating whether this text box is a multi-line text box that accepts ENTER
            keys to create new lines.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.IsPassword">
      <summary>
            Gets or sets a value indicating whether this text box is a password box that displays
            <see cref="P:DigitalRune.Game.UI.Controls.TextBox.PasswordCharacter" />s instead of the real characters. This is a game object 
            property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.IsPasswordPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.IsPassword" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.IsReadOnly">
      <summary>
            Gets or sets a value indicating whether this text box is read-only. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.IsReadOnlyPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.IsReadOnly" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.MaxLength">
      <summary>
            Gets or sets the maximal number of characters in the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.Text" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.MaxLengthPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.MaxLength" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.MaxLines">
      <summary>
            Gets or sets the maximal number of lines. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.MaxLinesPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.MaxLines" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.MinLines">
      <summary>
            Gets or sets the minimal number of desired lines. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.MinLinesPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.MinLines" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.PasswordCharacter">
      <summary>
            Gets or sets the character that is used instead of normal character if 
            <see cref="P:DigitalRune.Game.UI.Controls.TextBox.IsPassword" /> is set. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.PasswordCharacterPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.PasswordCharacter" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.Paste">
      <summary>
            Pastes the contents of the clipboard into the text box.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.Select(System.Int32,System.Int32)">
      <summary>
            Selects a range of text in the text box.
            </summary>
      <param name="start">
            The zero-based index of the first character in the selection.
            </param>
      <param name="length">
            The length of the selection, in characters.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The selection defined by <paramref name="start" /> and <paramref name="length" /> is invalid.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.TextBox.SelectAll">
      <summary>
            Selects all contents of the text box.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.SelectedText">
      <summary>
            Gets the content of the current selection in the text box.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.SelectionColor">
      <summary>
            Gets or sets the background color used for text selections. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.SelectionColorPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.SelectionColor" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.Text">
      <summary>
            Gets or sets the text. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.TextPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.Text" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.VerticalScrollBarStyle">
      <summary>
            Gets or sets the style that is applied to the vertical <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.VerticalScrollBarStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.VerticalScrollBarStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.VerticalScrollBarVisibility">
      <summary>
            Gets or sets the <see cref="T:DigitalRune.Game.UI.Controls.ScrollBarVisibility" /> of the vertical <see cref="T:DigitalRune.Game.UI.Controls.ScrollBar" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.TextBox.VerticalScrollBarVisibilityPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.TextBox.VerticalScrollBarVisibility" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.VisualCaret">
      <summary>
            Gets the position of the top left corner of the caret rectangle/line.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.VisualClip">
      <summary>
            Gets the clipping rectangle.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.VisualOffset">
      <summary>
            Gets the offset which is the horizontal offset for single-line text boxes or the vertical
            offset for multi-line text boxes (see also <see cref="P:DigitalRune.Game.UI.Controls.TextBox.MaxLines" /> and 
            <see cref="P:DigitalRune.Game.UI.Controls.TextBox.IsMultiline" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.VisualSelectionBounds">
      <summary>
            Gets the bounds of the text selection (for rendering).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.TextBox.VisualText">
      <summary>
            Gets the text exactly as it should be displayed (wrapping already applied).
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Thumb">
      <summary>
            Represents a control that can be dragged by the user. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Thumb.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Thumb" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Thumb.DragDelta">
      <summary>
            Gets or sets the dragging distance relative to the start position of the drag operation. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Thumb.DragDeltaPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Thumb.DragDelta" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Thumb.IsDragging">
      <summary>
            Gets or sets a value indicating whether this thumb is currently dragged by the user. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Thumb.IsDraggingPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Thumb.IsDragging" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Thumb.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Thumb.VisualState">
      <summary>
            Gets the visual state of the control as string.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.ToggleButton">
      <summary>
            Base class for controls that can switch states, such as <see cref="T:DigitalRune.Game.UI.Controls.CheckBox" /> or 
            <see cref="T:DigitalRune.Game.UI.Controls.RadioButton" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ToggleButton.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.ToggleButton" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ToggleButton.IsChecked">
      <summary>
            Gets or sets a value indicating whether this toggle button is checked. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.ToggleButton.IsCheckedPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.ToggleButton.IsChecked" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ToggleButton.OnClick(System.EventArgs)">
      <summary>
            Raises the <see cref="E:DigitalRune.Game.UI.Controls.ButtonBase.Click" /> event.
            </summary>
      <param name="eventArgs">
        <see cref="T:System.EventArgs" /> object that provides the arguments for the event.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.ToggleButton.OnToggle">
      <summary>
            Called when the toggle button is clicked.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.ToggleButton.VisualState">
      <summary>
            Gets the visual state of the control as string.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.UIControl">
      <summary>
            Represents the base class for user interface (UI) controls.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.UIControl" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ActualBounds">
      <summary>
            Gets the actual bounding rectangle of the control (defined by <see cref="P:DigitalRune.Game.UI.Controls.UIControl.ActualX" />, 
            <see cref="P:DigitalRune.Game.UI.Controls.UIControl.ActualY" />, <see cref="P:DigitalRune.Game.UI.Controls.UIControl.ActualWidth" /> and <see cref="P:DigitalRune.Game.UI.Controls.UIControl.ActualHeight" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ActualHeight">
      <summary>
            Gets the actual height of the control (computed in 
            <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ActualIsEnabled">
      <summary>
            Gets a value indicating whether this control is actually enabled, taking into account the 
            <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsEnabled" /> flag and the state of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.VisualParent" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ActualIsVisible">
      <summary>
            Gets a value indicating whether this control is actually visible, taking into account the 
            <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsVisible" /> flag and the state of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.VisualParent" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ActualWidth">
      <summary>
            Gets the actual width of the control (computed in 
            <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ActualX">
      <summary>
            Gets the actual X position of the top left corner of the control's bounds in screen 
            coordinates (computed in <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ActualY">
      <summary>
            Gets the actual Y position of the top left corner of the control's bounds in screen 
            coordinates (computed in <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.AllowedPlayer">
      <summary>
            Gets or sets the <see cref="T:DigitalRune.Game.Input.LogicalPlayerIndex" /> from which input is accepted.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Positions child elements and determines a size for a control. 
            </summary>
      <param name="position">
            The actual position of this control as determined by the parent.
            </param>
      <param name="size">
            The actual size of this control as determined by the parent.
            </param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.AutoUnfocus">
      <summary>
            Gets or sets a value indicating whether this control clears the focus when the mouse clicks
            another control than the currently focused control. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.AutoUnfocusPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.AutoUnfocus" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Background">
      <summary>
            Gets or sets the background color. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.BackgroundPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Background" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.BringIntoView">
      <summary>
            Attempts to bring this element into view, within any scrollable regions it is contained 
            within. 
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ContextMenu">
      <summary>
            Gets or sets the context menu that should pop up when the control is right-clicked
            (tap-and-hold on Windows Phone 7).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.CreateEvent``1(System.Type,System.String,System.String,System.String,``0)">
      <summary>
            Creates a game object event for a <see cref="T:DigitalRune.Game.UI.Controls.UIControl" />. (This method replaces
            <see cref="M:DigitalRune.Game.GameObject.CreateEvent``1(System.String,System.String,System.String,``0)" /> of the <see cref="T:DigitalRune.Game.GameObject" /> class.)
            </summary>
      <param name="ownerType">The control type.</param>
      <param name="name">The name of the event.</param>
      <param name="category">The category of the event.</param>
      <param name="description">The description of the event.</param>
      <param name="defaultEventArgs">The default event arguments.</param>
      <typeparam name="T">The type of the event arguments.</typeparam>
      <returns>The ID of the created event.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ownerType" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.CreateProperty``1(System.Type,System.String,System.String,System.String,``0,DigitalRune.Game.UI.Controls.UIPropertyOptions)">
      <summary>
            Creates a game object property for a <see cref="T:DigitalRune.Game.UI.Controls.UIControl" />. (This method replaces
            <see cref="M:DigitalRune.Game.GameObject.CreateProperty``1(System.String,System.String,System.String,``0)" /> of the <see cref="T:DigitalRune.Game.GameObject" /> class.)
            </summary>
      <param name="ownerType">The control type.</param>
      <param name="name">The name of the property.</param>
      <param name="category">The category of the property.</param>
      <param name="description">The description of the property.</param>
      <param name="defaultValue">The default value.</param>
      <param name="options">The <see cref="T:DigitalRune.Game.UI.Controls.UIPropertyOptions" />.</param>
      <typeparam name="T">The type of the property value.</typeparam>
      <returns>The ID of the created property</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ownerType" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Cursor">
      <summary>
            Gets or sets the mouse cursor that should be displayed when the mouse is over this control.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.DesiredHeight">
      <summary>
            Gets the desired height (including <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />) (which is computed in
            <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.DesiredWidth">
      <summary>
            Gets the desired width (including <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />) (which is computed in
            <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" />).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.Focus">
      <summary>
            Moves the input focus to this control.
            </summary>
      <returns>
        <see langword="true" /> if the focus was moved to this control; otherwise <see langword="false" />.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Focusable">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:DigitalRune.Game.UI.Controls.UIControl" /> can receive the input 
            focus. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.FocusablePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Focusable" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.FocusWhenMouseOver">
      <summary>
            Gets or sets a value indicating whether the control automatically receives focus when the
            mouse is over the control (without being clicked). This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.FocusWhenMouseOverPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.FocusWhenMouseOver" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Font">
      <summary>
            Gets or sets the font that is used if the control renders text. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.FontPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Font" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Foreground">
      <summary>
            Gets or sets the foreground color. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.ForegroundPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Foreground" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.GetControl(System.String)">
      <summary>
            Gets a control by name from the visual subtree of this control.
            </summary>
      <param name="name">The control name.</param>
      <returns>
            The control with the given name; or <see langword="null" /> if no matching control is found.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.GetPropertyOptions(System.Int32)">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Controls.UIPropertyOptions" /> of game object property.
            </summary>
      <param name="propertyId">The ID of the game object property.</param>
      <returns>The <see cref="T:DigitalRune.Game.UI.Controls.UIPropertyOptions" />.</returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.HasRenderTransform">
      <summary>
            Gets a value indicating whether this control has a render transform that is not the 
            identity transformation.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Height">
      <summary>
            Gets or sets the user-defined height. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.HeightPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Height" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.HitTest(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Tests if a position is over a control.
            </summary>
      <param name="control">
            The control. If <see langword="null" />, the position is checked against this control.
            </param>
      <param name="position">The position.</param>
      <returns>
        <see langword="true" /> if a mouse click at the <paramref name="position" /> can hit
            <paramref name="control" />.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.HorizontalAlignment">
      <summary>
            Gets or sets the horizontal alignment of this control. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.HorizontalAlignmentPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.HorizontalAlignment" /> game object property.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.UIControl.InputProcessed">
      <summary>
            Occurs after the device input was processed.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.UIControl.InputProcessing">
      <summary>
            Occurs before the device input is processed.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.InputService">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.Input.IInputService" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.InvalidateArrange">
      <summary>
            Invalidates the arrange state (layout) for the control. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.InvalidateMeasure">
      <summary>
            Invalidates the measurement state (layout) for the control. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.InvalidateVisual">
      <summary>
            Invalidates the cached <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderData" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsArrangeValid">
      <summary>
            Gets a value indicating whether the <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> results are 
            up-to-date.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsEnabled">
      <summary>
            Gets or sets a value indicating whether this control is enabled. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.IsEnabledPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsEnabled" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsFocused">
      <summary>
            Gets a value indicating whether this control has the input focus. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.IsFocusedPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsFocused" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsFocusScope">
      <summary>
            Gets or sets a value indicating whether this control is a focus scope. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.IsFocusScopePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsFocusScope" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsFocusWithin">
      <summary>
            Gets (or sets) a value indicating whether the focus is on this control or on any of 
            the visual children.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsMeasureValid">
      <summary>
            Gets a value indicating whether the <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> results 
            (<see cref="P:DigitalRune.Game.UI.Controls.UIControl.DesiredWidth" /> and <see cref="P:DigitalRune.Game.UI.Controls.UIControl.DesiredHeight" />) are up-to-date.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsMouseDirectlyOver">
      <summary>
            Gets a value indicating whether the mouse is over this control and not over a visual child 
            control.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsMouseOver">
      <summary>
            Gets or sets a value indicating whether the mouse is over this control or over a visual 
            child. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.IsMouseOverPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsMouseOver" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsVisible">
      <summary>
            Gets or sets a value indicating whether this control is visible. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.IsVisiblePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsVisible" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.IsVisualValid">
      <summary>
            Gets a value indicating whether the cached <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderData" /> is up-to-date.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Margin">
      <summary>
            Gets or sets the margin. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.MarginPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.MaxHeight">
      <summary>
            Gets or sets the maximal height of the control. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.MaxHeightPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.MaxHeight" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.MaxWidth">
      <summary>
            Gets or sets the maximal width of the control. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.MaxWidthPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.MaxWidth" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Updates the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.DesiredWidth" /> and <see cref="P:DigitalRune.Game.UI.Controls.UIControl.DesiredHeight" /> of the control. 
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The control can ignore
            this parameter and request a larger size.
            </param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.MinHeight">
      <summary>
            Gets or sets the minimal height of the control. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.MinHeightPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.MinHeight" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.MinWidth">
      <summary>
            Gets or sets the minimal width of the control. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.MinWidthPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.MinWidth" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnArrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Arrange(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F)" /> to arrange the visual children.
            </summary>
      <param name="position">The actual position of this control.</param>
      <param name="size">The actual size of this control.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnPropertyChanged``1(DigitalRune.Game.GameProperty{``0},``0,``0)">
      <summary>
            Is called after a game object property was changed.
            </summary>
      <param name="property">The game object property.</param>
      <param name="oldValue">The old value.</param>
      <param name="newValue">The new value.</param>
      <typeparam name="T">The type of the property value.</typeparam>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnRender(DigitalRune.Game.UI.Controls.UIRenderContext)">
      <summary>
            Called when the control and its visual children should be rendered.
            </summary>
      <param name="context">The render context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OnUpdate(System.TimeSpan)">
      <summary>
            Called when the game object should be updated.
            </summary>
      <param name="deltaTime">The elapsed time since the last frame.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Opacity">
      <summary>
            Gets or sets the opacity. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.OpacityPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Opacity" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.OverrideDefaultValue``1(System.Type,System.Int32,``0)">
      <summary>
            Overrides the default value of a game object property for a specific class.
            </summary>
      <param name="ownerType">The class type.</param>
      <param name="propertyId">The ID of the game object property.</param>
      <param name="defaultValue">The new default value.</param>
      <typeparam name="T">The type of the property value.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ownerType" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Padding">
      <summary>
            Gets or sets the padding. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.PaddingPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Padding" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.Render(DigitalRune.Game.UI.Controls.UIRenderContext)">
      <summary>
            Renders the control (including visual children).
            </summary>
      <param name="context">The render context.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.RenderData">
      <summary>
            Gets or sets the cached renderer data.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.RendererInfo">
      <summary>
            Gets or sets the cached renderer data.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.RenderRotation">
      <summary>
            Gets or sets the rotation of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransform" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.RenderRotationPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderRotation" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.RenderScale">
      <summary>
            Gets or sets the scale of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransform" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.RenderScalePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderScale" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransform">
      <summary>
            Gets the render transformation.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransformOrigin">
      <summary>
            Gets or sets the relative origin of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransform" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.RenderTransformOriginPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransformOrigin" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.RenderTranslation">
      <summary>
            Gets or sets the translation of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTransform" />. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.RenderTranslationPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.RenderTranslation" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Screen">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.SetPropertyOptions(System.Int32,DigitalRune.Game.UI.Controls.UIPropertyOptions)">
      <summary>
            Sets the <see cref="T:DigitalRune.Game.UI.Controls.UIPropertyOptions" /> of a game object property.
            </summary>
      <param name="propertyId">The ID of the game object property.</param>
      <param name="options">The options.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Style">
      <summary>
            Gets or sets the style.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Tag">
      <summary>
            Gets or sets a user-defined tag.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.ToolTip">
      <summary>
            Gets or sets the tool tip. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.ToolTipPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.ToolTip" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.UIService">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.IUIService" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIControl.UpdateLayout">
      <summary>
            Ensures that all visual child controls of this element are properly updated for layout. 
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.UserData">
      <summary>
            Gets or sets user-defined data.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.VerticalAlignment">
      <summary>
            Gets or sets the vertical alignment of this control. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.VerticalAlignmentPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.VerticalAlignment" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.VisualChildren">
      <summary>
            Gets the visual children.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.VisualParent">
      <summary>
            Gets the visual parent.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.VisualState">
      <summary>
            Gets the visual state of the control as string.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Width">
      <summary>
            Gets or sets the user-defined width. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.WidthPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Width" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.X">
      <summary>
            Gets or sets the x-position offset of the control. (Use this only for controls in a 
            <see cref="T:DigitalRune.Game.UI.Controls.Canvas" /> or under the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />.) This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.XPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.X" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIControl.Y">
      <summary>
            Gets or sets the y-position offset of the control. (Use this only for controls in a 
            <see cref="T:DigitalRune.Game.UI.Controls.Canvas" /> or under the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />.) This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIControl.YPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Y" /> game object property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.UIPropertyOptions">
      <summary>
            Defines how the property influences layout and rendering.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIPropertyOptions.None">
      <summary>
            No options are specified; the property does not influence the UI.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIPropertyOptions.AffectsMeasure">
      <summary>
            The measure pass of layout compositions is affected by value changes to this property. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIPropertyOptions.AffectsArrange">
      <summary>
            The arrange pass of layout compositions is affected by value changes to this property. 
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIPropertyOptions.AffectsRender">
      <summary>
            Some aspect of rendering or layout composition (other than measure or arrange) is affected 
            by value changes to this property.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.UIRenderContext">
      <summary>
            Provides information during rendering of UI controls.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIRenderContext.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.UIRenderContext" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIRenderContext.Data">
      <summary>
            Gets a generic collection of name/value pairs which can be used to store custom data.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIRenderContext.DeltaTime">
      <summary>
            Gets or sets the size of the current time step.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIRenderContext.Opacity">
      <summary>
            Gets or sets the absolute opacity.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIRenderContext.RenderTransform">
      <summary>
            Gets or sets the absolute render transformation.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.UIScreen">
      <summary>
            Manages and draws <see cref="T:DigitalRune.Game.UI.Controls.UIControl" />s and <see cref="T:DigitalRune.Game.UI.Controls.Window" />s.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.#ctor(System.String,DigitalRune.Game.UI.Rendering.IUIRenderer)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" /> class.
            </summary>
      <param name="name">The name of the screen.</param>
      <param name="renderer">
            The renderer that defines the styles and visual appearance for controls in this screen. 
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="renderer" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is an empty string.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.BringToFront(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Brings a control to the front of the z-order.
            </summary>
      <param name="control">The control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not a child of this UI screen.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.Children">
      <summary>
            Gets the children.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.ControlUnderMouse">
      <summary>
            Gets the control under mouse cursor.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.Draw(Microsoft.Xna.Framework.GameTime)">
      <summary>
            Draws the screen with all controls.
            </summary>
      <param name="gameTime">Snapshot of the game's timing state.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.Draw(System.TimeSpan)">
      <summary>
            Draws the screen with all controls.
            </summary>
      <param name="deltaTime">The size of the current time step.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.FocusManager">
      <summary>
            Gets or sets the <see cref="P:DigitalRune.Game.UI.Controls.UIScreen.FocusManager" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.InputEnabled">
      <summary>
            Gets or sets a value indicating whether input is enabled for this screen.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.Microsoft#Xna#Framework#IDrawable#DrawOrder">
      <summary>
            Returns the same value as <see cref="P:DigitalRune.Game.UI.Controls.UIScreen.ZIndex" />.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.UIScreen.Microsoft#Xna#Framework#IDrawable#DrawOrderChanged">
      <summary>
            Event raised after the <see cref="P:Microsoft.Xna.Framework.IDrawable.DrawOrder" /> property value has changed.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.Microsoft#Xna#Framework#IDrawable#Visible">
      <summary>
            Returns the same value as <see cref="P:DigitalRune.Game.UI.Controls.UIControl.IsVisible" />.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.UIScreen.Microsoft#Xna#Framework#IDrawable#VisibleChanged">
      <summary>
            Event raised after the <see cref="P:Microsoft.Xna.Framework.IDrawable.Visible" /> property value has changed.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.MouseWheelScrollDelta">
      <summary>
            Gets or sets the amount of the delta value of a single mouse wheel rotation increment. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIScreen.MouseWheelScrollDeltaPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIScreen.MouseWheelScrollDelta" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.MouseWheelScrollLines">
      <summary>
            Gets or sets the number of lines to scroll when the mouse wheel is rotated. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIScreen.MouseWheelScrollLinesPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIScreen.MouseWheelScrollLines" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.OnMeasure(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Controls.UIControl.Measure(DigitalRune.Mathematics.Algebra.Vector2F)" /> to compute the control-specific desired size.
            </summary>
      <param name="availableSize">
            The available space that the parent can allocate to this control. The <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />
            has already been subtracted from this size. The control can ignore this parameter and 
            request a larger size. This parameter is used by controls that adapt their size to the
            available space, like wrap panels.
            </param>
      <returns>
            The desired size (without <see cref="P:DigitalRune.Game.UI.Controls.UIControl.Margin" />).
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.OnRender(DigitalRune.Game.UI.Controls.UIRenderContext)">
      <summary>
            Called when the control and its visual children should be rendered.
            </summary>
      <param name="context">The render context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.UIScreen.OnUpdate(System.TimeSpan)">
      <summary>
            Called when the game object should be updated.
            </summary>
      <param name="deltaTime">The elapsed time since the last frame.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.Renderer">
      <summary>
            Gets the renderer that defines the styles and renders controls for this screen.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.ToolTipDelay">
      <summary>
            Gets the time which the mouse has to stand still before a tool tip pops up. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIScreen.ToolTipDelayPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIScreen.ToolTipDelay" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.ToolTipManager">
      <summary>
            Gets the <see cref="P:DigitalRune.Game.UI.Controls.UIScreen.ToolTipManager" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.ToolTipOffset">
      <summary>
            Gets the offset of the tool tip to the mouse position. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.UIScreen.ToolTipOffsetPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.UIScreen.ToolTipOffset" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.UIService">
      <summary>
            Gets the <see cref="T:DigitalRune.Game.UI.IUIService" />.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.UIScreen.ZIndex">
      <summary>
            Gets or sets the z-index that determines the draw order of all 
            <see cref="P:DigitalRune.Game.UI.IUIService.Screens" /> of the same <see cref="T:DigitalRune.Game.UI.IUIService" /></summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.VisualChildCollection">
      <summary>
            Manages a collection of child <see cref="T:DigitalRune.Game.UI.Controls.UIControl" />s for a parent <see cref="T:DigitalRune.Game.UI.Controls.UIControl" />.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.VisualChildCollection.ClearItems">
      <summary>
            Removes all elements from the collection. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.VisualChildCollection.GetParent(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Gets the parent of an object.
            </summary>
      <param name="child">The child object.</param>
      <returns>The parent of <paramref name="child" />.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.VisualChildCollection.InsertItem(System.Int32,DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Inserts an element into the collection at the specified index.
            </summary>
      <param name="index">
            The zero-based index at which <paramref name="child" /> should be inserted.
            </param>
      <param name="child">The object to insert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            Cannot insert node into collection - <paramref name="child" /> is already in this collection
            or child of another object.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.VisualChildCollection.MoveItem(System.Int32,System.Int32)">
      <summary>
            Moves the item at the specified index to a new location in the collection. 
            </summary>
      <param name="oldIndex">
            The zero-based index specifying the location of the item to be moved. 
            </param>
      <param name="newIndex">
            The zero-based index specifying the new location of the item.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.VisualChildCollection.RemoveItem(System.Int32)">
      <summary>
            Removes the element at the specified index of the collection. 
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.VisualChildCollection.SetItem(System.Int32,DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Replaces the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="child">The new value for the element at the specified index.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="child" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            Cannot insert node into collection - <paramref name="child" /> is already in this collection
            or child of another object.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.VisualChildCollection.SetParent(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Sets the parent of the given object.
            </summary>
      <param name="parent">The parent to set.</param>
      <param name="child">The child object.</param>
    </member>
    <member name="T:DigitalRune.Game.UI.Controls.Window">
      <summary>
            Provides the ability to create, configure, show, and manage the lifetime of windows and 
            dialog boxes.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Controls.Window" /> class.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.Activate">
      <summary>
            Activates this window (and deactivates all other windows).
            </summary>
      <returns>
        <see langword="true" /> if this window was successfully activated; otherwise, 
            <see langword="false" />.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.CanDrag">
      <summary>
            Gets or sets a value indicating whether this window can dragged with the mouse. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.CanDragPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.CanDrag" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.CanResize">
      <summary>
            Gets or sets a value indicating whether this window can be resized with the mouse. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.CanResizePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.CanResize" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.Close">
      <summary>
            Closes this window.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.CloseButtonStyle">
      <summary>
            Gets or sets the style that is applied to the Close button. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.CloseButtonStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.CloseButtonStyle" /> game object property.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.Window.Closed">
      <summary>
            Occurs when the window was closed using the <see cref="M:DigitalRune.Game.UI.Controls.Window.Close" /> method. 
            This is a game object event.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.ClosedEventId">
      <summary> 
            The ID of the <see cref="E:DigitalRune.Game.UI.Controls.Window.Closed" /> game object event.
            </summary>
    </member>
    <member name="E:DigitalRune.Game.UI.Controls.Window.Closing">
      <summary>
            Occurs when the window is closing. Allows to cancel the closing operation. 
            This is a game object event.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.ClosingEventId">
      <summary> 
            The ID of the <see cref="E:DigitalRune.Game.UI.Controls.Window.Closing" /> game object event.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.DialogResult">
      <summary>
            Gets or sets the dialog result. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.DialogResultPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.DialogResult" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.GetWindow(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Gets the window that contains the given <paramref name="control" />.
            </summary>
      <param name="control">The control.</param>
      <returns>
            The window that contains the <paramref name="control" />, or <see langword="null" /> if
            the control is not part of a window (controls can be direct children of the screen, no 
            intermediate window is required).
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.HideOnClose">
      <summary>
            Gets or sets a value indicating whether a this window is made in visible or totally
            removed from the control tree when the window is closed. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.HideOnClosePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.HideOnClose" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.Icon">
      <summary>
            Gets or sets the texture that contains the window icon. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.IconPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.Icon" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.IconSourceRectangle">
      <summary>
            Gets or sets the region of the <see cref="P:DigitalRune.Game.UI.Controls.Window.Icon" /> texture that contains the icon. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.IconSourceRectanglePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.IconSourceRectangle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.IconStyle">
      <summary>
            Gets or sets the style that is applied to the <see cref="T:DigitalRune.Game.UI.Controls.Image" /> control that draws the 
            <see cref="P:DigitalRune.Game.UI.Controls.Window.Icon" />. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.IconStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.IconStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.IsActive">
      <summary>
            Gets a value indicating whether this window is the currently active window. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.IsActivePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.IsActive" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.IsModal">
      <summary>
            Gets or sets a value indicating whether this window is a modal dialog. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.IsModalPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.IsModal" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.OnHandleInput(DigitalRune.Game.UI.Controls.InputContext)">
      <summary>
            Called when the control should handle device input.
            </summary>
      <param name="context">The input context.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.OnLoad">
      <summary>
            Called when the game object should load its content.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.OnUnload">
      <summary>
            Called when the game object should unload its content.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.Owner">
      <summary>
            Gets the owner of this window that was specified in <see cref="M:DigitalRune.Game.UI.Controls.Window.Show(DigitalRune.Game.UI.Controls.UIControl)" /> (typically a 
            <see cref="T:DigitalRune.Game.UI.Controls.UIScreen" />).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.ResizeBorder">
      <summary>
            Gets or sets the dimensions of the window border where resize operations can start. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.ResizeBorderPropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.ResizeBorder" /> game object property.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Controls.Window.Show(DigitalRune.Game.UI.Controls.UIControl)">
      <summary>
            Opens a window and returns without waiting for the newly opened window to close.
            </summary>
      <param name="owner">
            The owner of this window. If this window is closed, the focus moves back to the owner. Must
            not be <see langword="null" />.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="owner" /> is not loaded. The owner needs to be a visible control.
            </exception>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.Title">
      <summary>
            Gets or sets the window title that is visible in the caption bar. 
            This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.TitlePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.Title" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.TitleTextBlockStyle">
      <summary>
            Gets or sets the style that is applied to the <see cref="T:DigitalRune.Game.UI.Controls.TextBlock" /> that draws the window 
            <see cref="P:DigitalRune.Game.UI.Controls.Window.Title" />. This is a game object property.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Controls.Window.TitleTextBlockStylePropertyId">
      <summary> 
            The ID of the <see cref="P:DigitalRune.Game.UI.Controls.Window.TitleTextBlockStyle" /> game object property.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Controls.Window.VisualState">
      <summary>
            Gets the visual state of the control as string.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.IUIRenderer">
      <summary>
            Manages and renders the visual appearance of a UI.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.IUIRenderer.BeginBatch">
      <summary>
            Calls <strong>SpriteBatch.Begin</strong> of the <see cref="P:DigitalRune.Game.UI.Rendering.IUIRenderer.SpriteBatch" /> with default 
            settings. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.IUIRenderer.EndBatch">
      <summary>
            Calls <strong>SpriteBatch.End</strong> of the <see cref="P:DigitalRune.Game.UI.Rendering.IUIRenderer.SpriteBatch" /> to commit the 
            current batch.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.IUIRenderer.GetAttribute``1(System.String,System.String,``0@)">
      <summary>
            Gets a style-specific attribute value.
            </summary>
      <param name="style">The style.</param>
      <param name="name">The name of the attribute.</param>
      <param name="result">The attribute value.</param>
      <typeparam name="T">The type of the attribute value.</typeparam>
      <returns>
        <see langword="true" /> if the renderer can provide a value for the attribute; otherwise, 
            <see langword="false" /> if the renderer does not know the style or the attribute.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.IUIRenderer.GetCursor(System.String)">
      <summary>
            Gets a mouse cursor.
            </summary>
      <param name="name">
            The name of the mouse cursor. This name is any string - usually the asset name - that 
            identifies the cursor, e.g. "Wait". Can be <see langword="null" /> to get the default 
            cursor.
            </param>
      <returns>The mouse cursor.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.IUIRenderer.GetFont(System.String)">
      <summary>
            Gets a sprite font.
            </summary>
      <param name="name">
            The name of the font. This name is any string - usually the asset name - that identifies the 
            font, e.g. "Console". Can be <see langword="null" /> to get the default font.
            </param>
      <returns>The font.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.IUIRenderer.GetTexture(System.String)">
      <summary>
            Gets a texture.
            </summary>
      <param name="name">
            The name of the texture. This name is any string - usually the asset name - that identifies 
            the texture, e.g. "UITexture". Can be <see langword="null" /> to get the default texture.
            </param>
      <returns>
            The font.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.IUIRenderer.GraphicsDevice">
      <summary>
            Gets the graphics device.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.IUIRenderer.Render(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Game.UI.Controls.UIRenderContext)">
      <summary>
            Renders the specified control.
            </summary>
      <param name="control">The control.</param>
      <param name="context">The render context.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.IUIRenderer.SpriteBatch">
      <summary>
            Gets the sprite batch that is used to draw all images for the UI controls.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.IUIRenderer.Templates">
      <summary>
            Gets the UI control templates that define the game object properties for the different 
            styles.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.RenderTransform">
      <summary>
            Represents a render transformation.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.#ctor(DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F,System.Single,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.RenderTransform" /> struct.
            </summary>
      <param name="origin">The origin of the transformations in screen coordinates.</param>
      <param name="scale">The scale factors.</param>
      <param name="rotation">The rotation angle in radians.</param>
      <param name="translation">The translation vector.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.#ctor(DigitalRune.Mathematics.Algebra.Vector2F,System.Single,System.Single,DigitalRune.Mathematics.Algebra.Vector2F,DigitalRune.Mathematics.Algebra.Vector2F,System.Single,DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.RenderTransform" /> struct.
            </summary>
      <param name="position">
            The upper, left corner of the current element in screen coordinates.
            </param>
      <param name="width">The width of the element.</param>
      <param name="height">The height of the element.</param>
      <param name="relativeOrigin">
            The relative origin of the render transformation. (0, 0) represents the upper, left corner
            and (1, 1) represents the lower, right corner of the element.
            </param>
      <param name="scale">The scale factors.</param>
      <param name="rotation">The rotation angle in radians.</param>
      <param name="translation">The translation vector.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,DigitalRune.Game.UI.RectangleF,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color)">
      <summary>
            Transforms a sprite and adds it to a batch of sprites for rendering using the specified 
            texture, position, source rectangle and color. 
            </summary>
      <param name="spriteBatch">The sprite batch for rendering.</param>
      <param name="texture">The texture.</param>
      <param name="destinationRectangle">
            A rectangle that specifies (in screen coordinates) the destination for drawing the sprite. 
            If this rectangle is not the same size as the source rectangle, the sprite will be scaled to 
            fit.
            </param>
      <param name="sourceRectangle">
            A rectangle that specifies (in texels) the source texels from a texture. Use 
            <see langword="null" /> to draw the entire texture.
            </param>
      <param name="color">
            The color to tint a sprite. Use white for full color with no tinting.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,DigitalRune.Mathematics.Algebra.Vector2F,Microsoft.Xna.Framework.Color)">
      <summary>
            Transforms a sprite and adds it to a batch of sprites for rendering using the specified 
            texture, position and color. 
            </summary>
      <param name="spriteBatch">The sprite batch for rendering.</param>
      <param name="texture">The texture.</param>
      <param name="position">The location in screen coordinates to draw the sprite.</param>
      <param name="color">
            The color to tint a sprite. Use white for full color with no tinting.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,DigitalRune.Mathematics.Algebra.Vector2F,System.Nullable{Microsoft.Xna.Framework.Rectangle},Microsoft.Xna.Framework.Color)">
      <summary>
            Transforms a sprite and adds it to a batch of sprites for rendering using the specified 
            texture, position, source rectangle and color. 
            </summary>
      <param name="spriteBatch">The sprite batch for rendering.</param>
      <param name="texture">The texture.</param>
      <param name="position">The location in screen coordinates to draw the sprite.</param>
      <param name="sourceRectangle">
            A rectangle that specifies (in texels) the source texels from a texture. Use 
            <see langword="null" /> to draw the entire texture.
            </param>
      <param name="color">
            The color to tint a sprite. Use white for full color with no tinting.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.SpriteFont,System.String,DigitalRune.Mathematics.Algebra.Vector2F,Microsoft.Xna.Framework.Color)">
      <summary>
            Transforms a string and adds it to a batch of sprites for rendering using the specified 
            font, text, position, and color.
            </summary>
      <param name="spriteBatch">The sprite batch for rendering.</param>
      <param name="spriteFont">A font for displaying text.</param>
      <param name="text">The text string.</param>
      <param name="position">The location in screen coordinates to draw the sprite.</param>
      <param name="color">
            The color to tint a sprite. Use white for full color with no tinting.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.SpriteFont,System.Text.StringBuilder,DigitalRune.Mathematics.Algebra.Vector2F,Microsoft.Xna.Framework.Color)">
      <summary>
            Transforms a string and adds it to a batch of sprites for rendering using the specified 
            font, text, position, and color.
            </summary>
      <param name="spriteBatch">The sprite batch for rendering.</param>
      <param name="spriteFont">A font for displaying text.</param>
      <param name="text">The text string.</param>
      <param name="position">The location in screen coordinates to draw the sprite.</param>
      <param name="color">
            The color to tint a sprite. Use white for full color with no tinting.
            </param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.Equals(DigitalRune.Game.UI.Rendering.RenderTransform)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
        <see langword="true" /> if the current object is equal to the other parameter; otherwise, 
            <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.Equals(System.Object)">
      <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
      <param name="obj">Another object to compare to.</param>
      <returns>
        <see langword="true" /> if <paramref name="obj" /> and this instance are the same type and
            represent the same value; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.FromRenderDirection(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Transforms a direction by the inverse of this render transformation.
            </summary>
      <param name="direction">The transformed direction.</param>
      <returns>The direction.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.FromRenderPosition(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Transforms a position by the inverse of this render transformation.
            </summary>
      <param name="position">The transformed position in screen coordinates.</param>
      <returns>The position in screen coordinates.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>
            A 32-bit signed integer that is the hash code for this instance.
            </returns>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.RenderTransform.Identity">
      <summary>
            The identity transform.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.Multiply(DigitalRune.Game.UI.Rendering.RenderTransform,DigitalRune.Game.UI.Rendering.RenderTransform)">
      <summary>
            Multiplies two render transformation.
            </summary>
      <param name="transform2">The first render transformation.</param>
      <param name="transform1">The second render transformation.</param>
      <returns>
            The product <paramref name="transform2" /> * <paramref name="transform1" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.op_Equality(DigitalRune.Game.UI.Rendering.RenderTransform,DigitalRune.Game.UI.Rendering.RenderTransform)">
      <summary>
            Compares two <see cref="T:DigitalRune.Game.UI.Rendering.RenderTransform" />s to determine whether they are the same.
            </summary>
      <param name="transform1">The first render transform.</param>
      <param name="transform2">The second render transform.</param>
      <returns>
        <see langword="true" /> if the render transforms are equal; otherwise 
            <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.op_Implicit(DigitalRune.Game.UI.Rendering.RenderTransform)~DigitalRune.Mathematics.Algebra.Matrix22F">
      <summary>
            Converts a render transformation to a 2x2 matrix that only represents the scaling and the
            rotation (no translation).
            </summary>
      <param name="transform">The render transformation.</param>
      <returns>
            A 2x2-matrix that represents the scaling and the rotation (no translation).
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.op_Implicit(DigitalRune.Game.UI.Rendering.RenderTransform)~DigitalRune.Mathematics.Algebra.Matrix33F">
      <summary>
            Converts a render transformation to a 3x3 matrix.
            </summary>
      <param name="transform">The render transformation.</param>
      <returns>
            A 3x3-matrix that represents the same transformation.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.op_Inequality(DigitalRune.Game.UI.Rendering.RenderTransform,DigitalRune.Game.UI.Rendering.RenderTransform)">
      <summary>
            Compares two <see cref="T:DigitalRune.Game.UI.Rendering.RenderTransform" />s to determine whether they are the different.
            </summary>
      <param name="transform1">The first render transform.</param>
      <param name="transform2">The second render transform.</param>
      <returns>
        <see langword="true" /> if the render transforms are different; otherwise 
            <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.op_Multiply(DigitalRune.Game.UI.Rendering.RenderTransform,DigitalRune.Game.UI.Rendering.RenderTransform)">
      <summary>
            Multiplies two render transformation.
            </summary>
      <param name="transform2">The first render transformation.</param>
      <param name="transform1">The second render transformation.</param>
      <returns>
            The product <paramref name="transform2" /> * <paramref name="transform1" />.
            </returns>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.RenderTransform.Origin">
      <summary>
            The origin of the render transformations in screen coordinates.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.RenderTransform.Rotation">
      <summary>
            The rotation given as the angle in radians.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.RenderTransform.Scale">
      <summary>
            The scale.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.ToMatrix22F">
      <summary>
            Converts this render transformation to a 2x2 matrix that only represents the scaling and the
            rotation (no translation).
            </summary>
      <returns>
            A 2x2-matrix that represents the scaling and the rotation (no translation).
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.ToMatrix33F">
      <summary>
            Converts this render transformation to a 3x3 matrix.
            </summary>
      <returns>
            A 3x3-matrix that represents the same transformation.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.ToRenderDirection(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Transforms a direction.
            </summary>
      <param name="direction">The direction.</param>
      <returns>The transformed direction.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.ToRenderPosition(DigitalRune.Mathematics.Algebra.Vector2F)">
      <summary>
            Transforms a position.
            </summary>
      <param name="position">The position in screen coordinates.</param>
      <returns>The transformed position in screen coordinates.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.ToString">
      <summary>
            Returns the string representation of this render transform.
            </summary>
      <returns>
            The string representation of this render transform.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.ToString(System.IFormatProvider)">
      <summary>
            Returns the string representation of this pose using the specified culture-specific format
            information.
            </summary>
      <param name="provider">
            An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information
            </param>
      <returns>
            The string representation of this pose.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.RenderTransform.Transform(DigitalRune.Game.UI.RectangleF)">
      <summary>
            Transforms the specified rectangle. (Does not work with rotations!)
            </summary>
      <param name="rectangle">The rectangle.</param>
      <returns>The transformed rectangle.</returns>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.RenderTransform.Translation">
      <summary>
            The translation.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.Theme">
      <summary>
            Represents a UI theme that defines the properties and visual appearance of UI controls.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.Theme.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.Theme" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.Theme.Content">
      <summary>
            Gets or sets the content manager.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.Theme.Cursors">
      <summary>
            Gets the cursor definitions.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.Theme.Fonts">
      <summary>
            Gets the fonts definitions.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.Theme.Styles">
      <summary>
            Gets the styles of the controls.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.Theme.Textures">
      <summary>
            Gets the textures.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeAttribute">
      <summary>
            Represents an attribute of the UI theme (<see cref="P:DigitalRune.Game.UI.Rendering.ThemeAttribute.Name" /> and <see cref="P:DigitalRune.Game.UI.Rendering.ThemeAttribute.Value" />).
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeAttribute" /> class</summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeAttribute.Name">
      <summary>
            Gets or sets the name of the attribute.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeAttribute.Value">
      <summary>
            Gets or sets the value of the attribute.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeCursor">
      <summary>
            Represents a mouse cursor of the UI theme.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeCursor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeCursor" /> class</summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeCursor.Cursor">
      <summary>
            Gets or sets the cursor.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeCursor.IsDefault">
      <summary>
            Gets or sets a value indicating whether this cursor is the default cursor.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeCursor.Name">
      <summary>
            Gets the name of the cursor.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeFont">
      <summary>
            Represents a font of the UI theme.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeFont.#ctor">
      <summary>Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeFont" /> class</summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeFont.Font">
      <summary>
            Gets or sets the font.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeFont.IsDefault">
      <summary>
            Gets or sets a value indicating whether this font is the default font.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeFont.Name">
      <summary>
            Gets or sets the name of the font.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeHelper">
      <summary>
            Provides methods that help to load and parse a UI theme.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseColor(System.String,Microsoft.Xna.Framework.Color)">
      <summary>
            Converts the specified string representation of a color to its <see cref="T:Microsoft.Xna.Framework.Color" /> 
            equivalent, or throws an exception if the string cannot be converted to a 
            <see cref="T:Microsoft.Xna.Framework.Color" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, the 
            <paramref name="defaultColor" /> is returned.
            </param>
      <param name="defaultColor">The default color that is used for empty strings.</param>
      <returns>The <see cref="T:Microsoft.Xna.Framework.Color" />.</returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:Microsoft.Xna.Framework.Color" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseHorizontalAlignment(System.String)">
      <summary>
            Converts the specified string representation of a horizontal alignment to its 
            <see cref="T:DigitalRune.Game.UI.HorizontalAlignment" /> equivalent, or throws an exception if the string cannot be
            converted to a <see cref="T:DigitalRune.Game.UI.HorizontalAlignment" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, 
            <see cref="F:DigitalRune.Game.UI.HorizontalAlignment.Left" /> is returned as the default value.
            </param>
      <returns>The <see cref="T:DigitalRune.Game.UI.HorizontalAlignment" />.</returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:DigitalRune.Game.UI.HorizontalAlignment" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseRectangle(System.String)">
      <summary>
            Converts the specified string representation of a rectangle to its <see cref="T:Microsoft.Xna.Framework.Rectangle" /> 
            equivalent, or throws an exception if the string cannot be converted to a 
            <see cref="T:Microsoft.Xna.Framework.Rectangle" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, a rectangle is 
            returned where all values are 0.
            </param>
      <returns>
            The <see cref="T:Microsoft.Xna.Framework.Rectangle" />.
            </returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:Microsoft.Xna.Framework.Rectangle" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseTileMode(System.String)">
      <summary>
            Converts the specified string representation of a tile mode to its 
            <see cref="T:DigitalRune.Game.UI.Rendering.TileMode" /> equivalent, or throws an exception if the string cannot be
            converted to a <see cref="T:DigitalRune.Game.UI.Rendering.TileMode" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, 
            <see cref="F:DigitalRune.Game.UI.Rendering.TileMode.None" /> is returned as the default value.
            </param>
      <returns>The <see cref="T:DigitalRune.Game.UI.Rendering.TileMode" />.</returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:DigitalRune.Game.UI.Rendering.TileMode" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseVector2F(System.String)">
      <summary>
            Converts the specified string representation of a 2-dimensional vector to its 
            <see cref="T:DigitalRune.Mathematics.Algebra.Vector2F" /> equivalent, or throws an exception if the string cannot be
            converted to a <see cref="T:DigitalRune.Mathematics.Algebra.Vector2F" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, 
            <see cref="F:DigitalRune.Mathematics.Algebra.Vector2F.Zero" /> is returned as the default value.
            </param>
      <returns>The <see cref="T:DigitalRune.Mathematics.Algebra.Vector2F" />.</returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:DigitalRune.Mathematics.Algebra.Vector2F" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseVector3F(System.String)">
      <summary>
            Converts the specified string representation of a 3-dimensional vector to its 
            <see cref="T:DigitalRune.Mathematics.Algebra.Vector3F" /> equivalent, or throws an exception if the string cannot be
            converted to a <see cref="T:DigitalRune.Mathematics.Algebra.Vector3F" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, 
            <see cref="F:DigitalRune.Mathematics.Algebra.Vector3F.Zero" /> is returned as the default value.
            </param>
      <returns>The <see cref="T:DigitalRune.Mathematics.Algebra.Vector3F" />.</returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:DigitalRune.Mathematics.Algebra.Vector3F" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseVector4F(System.String)">
      <summary>
            Converts the specified string representation of a 4-dimensional vector to its 
            <see cref="T:DigitalRune.Mathematics.Algebra.Vector4F" /> equivalent, or throws an exception if the string cannot be
            converted to a <see cref="T:DigitalRune.Mathematics.Algebra.Vector4F" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, 
            <see cref="F:DigitalRune.Mathematics.Algebra.Vector4F.Zero" /> is returned as the default value.
            </param>
      <returns>The <see cref="T:DigitalRune.Mathematics.Algebra.Vector4F" />.</returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:DigitalRune.Mathematics.Algebra.Vector4F" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeHelper.ParseVerticalAlignment(System.String)">
      <summary>
            Converts the specified string representation of a vertical alignment to its 
            <see cref="T:DigitalRune.Game.UI.VerticalAlignment" /> equivalent, or throws an exception if the string cannot be
            converted to a <see cref="T:DigitalRune.Game.UI.VerticalAlignment" />.
            </summary>
      <param name="value">
            The value. If this value is <see langword="null" /> or an empty string, 
            <see cref="F:DigitalRune.Game.UI.VerticalAlignment.Top" /> is returned as the default value.
            </param>
      <returns>The <see cref="T:DigitalRune.Game.UI.VerticalAlignment" />.</returns>
      <exception cref="T:System.FormatException">
            Cannot convert <paramref name="value" /> to <see cref="T:DigitalRune.Game.UI.VerticalAlignment" />.
            </exception>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeImage">
      <summary>
            Represents an image of the UI theme.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeImage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeImage" /> class</summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.Border">
      <summary>
            Gets or sets the border that defines the 9-grid layout for image stretching.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.Color">
      <summary>
            Gets or sets the tint color.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.HorizontalAlignment">
      <summary>
            Gets or sets the horizontal alignment.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.IsOverlay">
      <summary>
            Gets or sets a value indicating whether this image is drawn on top of the control.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.Margin">
      <summary>
            Gets or sets the margin (left, top, right, bottom).
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.Name">
      <summary>
            Gets or sets the name of the image.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.SourceRectangle">
      <summary>
            Gets or sets the source rectangle of the image in the texture atlas of the theme.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.Texture">
      <summary>
            Gets or sets the texture atlas containing the image.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.TileMode">
      <summary>
            Gets or sets the tile mode.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeImage.VerticalAlignment">
      <summary>
            Gets or sets the vertical alignment.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeState">
      <summary>
            Represents a visual state of a UI control.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeState.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeState" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeState.Background">
      <summary>
            Gets or sets the background color.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeState.Foreground">
      <summary>
            Gets or sets the foreground color.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeState.Images">
      <summary>
            Gets the images that create the appearance of the control.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeState.IsInherited">
      <summary>
            Gets or sets a value indicating whether this state is inherited.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeState.Name">
      <summary>
            Gets or sets the name of the state.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeState.Opacity">
      <summary>
            Gets or sets the opacity.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeStyle">
      <summary>
            Represents a visual style of a UI control.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeStyle.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeStyle" /> class.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeStyle.Attributes">
      <summary>
            Gets the attributes that have been defined for this style.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeStyle.Inherits">
      <summary>
            Gets or sets the style from which this style inherits settings.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeStyle.Name">
      <summary>
            Gets or sets the name of the style.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeStyle.States">
      <summary>
            Gets the visual states.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.ThemeTexture">
      <summary>
            Represents a texture of the UI theme.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.ThemeTexture.#ctor">
      <summary>Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeTexture" /> class</summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeTexture.IsDefault">
      <summary>
            Gets or sets a value indicating whether this texture is the default texture.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeTexture.Name">
      <summary>
            Gets or sets the name of the texture.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.ThemeTexture.Texture">
      <summary>
            Gets or sets the texture.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.TileMode">
      <summary>
            Specifies whether the theme image is a tile that is repeated and how.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.TileMode.None">
      <summary>
            The image is not repeated. Only one copy of the image is drawn.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.TileMode.TileX">
      <summary>
            The image is repeated horizontally only.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.TileMode.TileY">
      <summary>
            The image is repeated vertically only.
            </summary>
    </member>
    <member name="F:DigitalRune.Game.UI.Rendering.TileMode.TileXY">
      <summary>
            The image is repeated both horizontally and vertically.
            </summary>
    </member>
    <member name="T:DigitalRune.Game.UI.Rendering.UIRenderer">
      <summary>
            Manages and renders the visual appearance of a UI. (Default implementation.)
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.#ctor(Microsoft.Xna.Framework.Game,DigitalRune.Game.UI.Rendering.Theme)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.UIRenderer" /> class.
            (Not available in Silverlight.)
            </summary>
      <param name="game">The XNA Game instance.</param>
      <param name="theme">The loaded UI theme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="game" /> or <paramref name="theme" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,DigitalRune.Game.UI.Rendering.Theme)">
      <summary>
            Initializes a new instance of the <see cref="T:DigitalRune.Game.UI.Rendering.UIRenderer" /> class.
            </summary>
      <param name="graphicsDevice">The graphics device.</param>
      <param name="theme">The loaded UI theme.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="graphicsDevice" /> or <paramref name="theme" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.BeginBatch">
      <summary>
            Calls <strong>SpriteBatch.Begin</strong> of the <see cref="P:DigitalRune.Game.UI.Rendering.IUIRenderer.SpriteBatch" /> with default 
            settings. 
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.EndBatch">
      <summary>
            Calls <strong>SpriteBatch.End</strong> of the <see cref="P:DigitalRune.Game.UI.Rendering.IUIRenderer.SpriteBatch" /> to commit the 
            current batch.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.GetAttribute``1(System.String,System.String,``0@)">
      <summary>
            Gets a style-specific attribute value.
            </summary>
      <param name="style">The style.</param>
      <param name="name">The name of the attribute.</param>
      <param name="result">The attribute value.</param>
      <typeparam name="T">The type of the attribute value.</typeparam>
      <returns>
        <see langword="true" /> if the renderer can provide a value for the attribute; otherwise, 
            <see langword="false" /> if the renderer does not know the style or the attribute.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.GetCursor(System.String)">
      <summary>
            Gets a mouse cursor.
            </summary>
      <param name="name">
            The name of the mouse cursor. This name is any string - usually the asset name - that 
            identifies the cursor, e.g. "Wait". Can be <see langword="null" /> to get the default 
            cursor.
            </param>
      <returns>The mouse cursor.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.GetFont(System.String)">
      <summary>
            Gets a sprite font.
            </summary>
      <param name="name">
            The name of the font. This name is any string - usually the asset name - that identifies the 
            font, e.g. "Console". Can be <see langword="null" /> to get the default font.
            </param>
      <returns>The font.</returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.GetTexture(System.String)">
      <summary>
            Gets a texture.
            </summary>
      <param name="name">
            The name of the texture. This name is any string - usually the asset name - that identifies 
            the texture, e.g. "UITexture". Can be <see langword="null" /> to get the default texture.
            </param>
      <returns>
            The font.
            </returns>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.UIRenderer.GraphicsDevice">
      <summary>
            Gets the graphics device.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.OnParseAttribute``1(DigitalRune.Game.UI.Rendering.ThemeAttribute,``0@)">
      <summary>
            Called by <see cref="M:DigitalRune.Game.UI.Rendering.UIRenderer.GetAttribute``1(System.String,System.String,``0@)" /> to convert attributes to values.
            </summary>
      <param name="attribute">The attribute.</param>
      <param name="result">The parsed value.</param>
      <typeparam name="T">The target type.</typeparam>
      <returns>
        <see langword="true" /> if the <see cref="P:DigitalRune.Game.UI.Rendering.ThemeAttribute.Value" /> could be converted to the
            type <typeparamref name="T" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.Render(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Game.UI.Controls.UIRenderContext)">
      <summary>
            Renders the specified control.
            </summary>
      <param name="control">The control.</param>
      <param name="context">The render context.</param>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.UIRenderer.RenderCallbacks">
      <summary>
            Gets the render callbacks.
            </summary>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.RenderImage(DigitalRune.Game.UI.RectangleF,DigitalRune.Game.UI.Rendering.ThemeImage,System.Single,DigitalRune.Game.UI.Rendering.RenderTransform)">
      <summary>
            Renders a <see cref="T:DigitalRune.Game.UI.Rendering.ThemeImage" />.
            </summary>
      <param name="bounds">The control's bounding rectangle.</param>
      <param name="image">The image.</param>
      <param name="opacity">The opacity.</param>
      <param name="transform">The render transform.</param>
    </member>
    <member name="M:DigitalRune.Game.UI.Rendering.UIRenderer.RenderImages(DigitalRune.Game.UI.Controls.UIControl,DigitalRune.Game.UI.Controls.UIRenderContext,System.Boolean)">
      <summary>
            Renders the <see cref="T:DigitalRune.Game.UI.Rendering.ThemeImage" />s of the current visual state of the given context.
            </summary>
      <param name="control">The control.</param>
      <param name="context">The render context.</param>
      <param name="drawOverlays">
            If set to <see langword="true" /> only overlay images are rendered; otherwise, only
            background images are rendered. See <see cref="P:DigitalRune.Game.UI.Rendering.ThemeImage.IsOverlay" />.
            </param>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.UIRenderer.SpriteBatch">
      <summary>
            Gets the sprite batch that is used to draw all images for the UI controls.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.UIRenderer.Templates">
      <summary>
            Gets the UI control templates that define the game object properties for the different 
            styles.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.UIRenderer.Theme">
      <summary>
            Gets the UI theme.
            </summary>
    </member>
    <member name="P:DigitalRune.Game.UI.Rendering.UIRenderer.WhiteTexture">
      <summary>
            Gets a white 1x1 texture.
            </summary>
    </member>
  </members>
</doc>